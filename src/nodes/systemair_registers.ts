import { RegisterDescription, DataType, RegisterType } from "./systemair_types";

function r(
    modbus_address: number,
    data_type: DataType,
    register_type: RegisterType,
    name: string,
    _minimum?: number,
    _maximum?: number,
): [number, RegisterDescription] {
    const address = ~~modbus_address;
    return [~~modbus_address, {
        name: name,
        data_type: data_type,
        register_type: register_type,
        modbus_address: address,
        description: "",
    }];
}

const U16 = DataType.U16;
const I16 = DataType.I16;
const CEL = DataType.I16_E1;
const SPH = DataType.I16_E1;
const RO = RegisterType.RO;
const RW = RegisterType.RW;
const UD = undefined;

const registers = new Map<number, RegisterDescription>([
    r(1001, U16, RO, "DEMC_RH_HIGHEST", 0, 100),
    r(1002, U16, RO, "DEMC_CO2_HIGHEST", 0, 2000),
    r(1011, U16, RO, "DEMC_RH_PI_SP", 0, 100),
    r(1012, U16, RO, "DEMC_RH_PI_FEEDBACK", 0, 100),
    r(1019, U16, RO, "DEMC_RH_PI_OUTPUT", UD, UD),
    r(1021, U16, RO, "DEMC_CO2_PI_SP", 0, 2000),
    r(1022, U16, RO, "DEMC_CO2_PI_FEEDBACK", 0, 2000),
    r(1029, U16, RO, "DEMC_CO2_PI_OUTPUT", UD, UD),
    r(1031, U16, RW, "DEMC_RH_SETTINGS_PBAND", 1, 100),
    r(1033, U16, RW, "DEMC_RH_SETTINGS_SP_SUMMER", 10, 100),
    r(1034, U16, RW, "DEMC_RH_SETTINGS_SP_WINTER", 10, 100),
    r(1035, U16, RW, "DEMC_RH_SETTINGS_ON_OFF", 0, 1),
    r(1039, U16, RO, "SUMMER_WINTER", 0, 1),
    r(1041, U16, RW, "DEMC_CO2_SETTINGS_PBAND", 50, 2000),
    r(1043, U16, RW, "DEMC_CO2_SETTINGS_SP", 100, 2000),
    r(1044, U16, RW, "DEMC_CO2_SETTINGS_ON_OFF", 0, 1),
    r(1101, U16, RW, "USERMODE_HOLIDAY_TIME", 1, 365),
    r(1102, U16, RW, "USERMODE_AWAY_TIME", 1, 72),
    r(1103, U16, RW, "USERMODE_FIREPLACE_TIME", 1, 60),
    r(1104, U16, RW, "USERMODE_REFRESH_TIME", 1, 240),
    r(1105, U16, RW, "USERMODE_CROWDED_TIME", 1, 8),
    r(1111, U16, RO, "USERMODE_REMAINING_TIME_L", UD, UD),
    r(1112, U16, RO, "USERMODE_REMAINING_TIME_H", UD, UD),
    r(1121, U16, RW, "IAQ_SPEED_LEVEL_MIN", 2, 3),
    r(1122, U16, RW, "IAQ_SPEED_LEVEL_MAX", 3, 5),
    r(1123, U16, RO, "IAQ_LEVEL", 0, 2),
    r(1131, U16, RW, "USERMODE_MANUAL_AIRFLOW_LEVEL_SAF", 0, 4),
    r(1135, U16, RW, "USERMODE_CROWDED_AIRFLOW_LEVEL_SAF", 3, 5),
    r(1136, U16, RW, "USERMODE_CROWDED_AIRFLOW_LEVEL_EAF", 3, 5),
    r(1137, U16, RW, "USERMODE_REFRESH_AIRFLOW_LEVEL_SAF", 3, 5),
    r(1138, U16, RW, "USERMODE_REFRESH_AIRFLOW_LEVEL_EAF", 3, 5),
    r(1139, U16, RW, "USERMODE_FIREPLACE_AIRFLOW_LEVEL_SAF", 3, 5),
    r(1140, U16, RW, "USERMODE_FIREPLACE_AIRFLOW_LEVEL_EAF", 1, 3),
    r(1141, U16, RW, "USERMODE_AWAY_AIRFLOW_LEVEL_SAF", 0, 3),
    r(1142, U16, RW, "USERMODE_AWAY_AIRFLOW_LEVEL_EAF", 0, 3),
    r(1143, U16, RW, "USERMODE_HOLIDAY_AIRFLOW_LEVEL_SAF", 0, 3),
    r(1144, U16, RW, "USERMODE_HOLIDAY_AIRFLOW_LEVEL_EAF", 0, 3),
    r(1145, U16, RW, "USERMODE_COOKERHOOD_AIRFLOW_LEVEL_SAF", 1, 5),
    r(1146, U16, RW, "USERMODE_COOKERHOOD_AIRFLOW_LEVEL_EAF", 1, 5),
    r(1147, U16, RW, "USERMODE_VACUUMCLEANER_AIRFLOW_LEVEL_SAF", 1, 5),
    r(1148, U16, RW, "USERMODE_VACUUMCLEANER_AIRFLOW_LEVEL_EAF", 1, 5),
    r(1151, CEL, RW, "USERMODE_CROWDED_T_OFFSET", -100, 0),
    r(1161, U16, RO, "USERMODE_MODE", 0, 12),
    r(1162, U16, RW, "USERMODE_HMI_CHANGE_REQUEST", 0, 7),
    r(1171, U16, RW, "CDI_1_AIRFLOW_LEVEL_SAF", 0, 5),
    r(1172, U16, RW, "CDI_1_AIRFLOW_LEVEL_EAF", 0, 5),
    r(1173, U16, RW, "CDI_2_AIRFLOW_LEVEL_SAF", 0, 5),
    r(1174, U16, RW, "CDI_2_AIRFLOW_LEVEL_EAF", 0, 5),
    r(1175, U16, RW, "CDI_3_AIRFLOW_LEVEL_SAF", 0, 5),
    r(1176, U16, RW, "CDI_3_AIRFLOW_LEVEL_EAF", 0, 5),
    r(1177, U16, RW, "PRESSURE_GUARD_AIRFLOW_LEVEL_SAF", 0, 5),
    r(1178, U16, RW, "PRESSURE_GUARD_AIRFLOW_LEVEL_EAF", 0, 5),
    r(1181, U16, RW, "USERMODE_HOLIDAY_DI_OFF_DELAY", 0, 365),
    r(1182, U16, RW, "USERMODE_AWAY_DI_OFF_DELAY", 0, 72),
    r(1183, U16, RW, "USERMODE_FIRPLACE_DI_OFF_DELAY", 0, 60),
    r(1184, U16, RW, "USERMODE_REFRESH_DI_OFF_DELAY", 0, 240),
    r(1185, U16, RW, "USERMODE_CROWDED_DI_OFF_DELAY", 0, 8),
    r(1188, U16, RW, "CDI1_OFF_DELAY", 0, 240),
    r(1189, U16, RW, "CDI2_OFF_DELAY", 0, 240),
    r(1190, U16, RW, "CDI3_OFF_DELAY", 0, 240),
    r(1221, U16, RO, "SPEED_CDI1_SAF", UD, UD),
    r(1222, U16, RO, "SPEED_CDI1_EAF", UD, UD),
    r(1223, U16, RO, "SPEED_CDI2_SAF", UD, UD),
    r(1224, U16, RO, "SPEED_CDI2_EAF", UD, UD),
    r(1225, U16, RO, "SPEED_CDI3_SAF", UD, UD),
    r(1226, U16, RO, "SPEED_CDI3_EAF", UD, UD),
    r(1227, U16, RO, "SPEED_PRESSURE_GUARD_SAF", UD, UD),
    r(1228, U16, RO, "SPEED_PRESSURE_GUARD_EAF", UD, UD),
    r(1251, U16, RW, "FAN_OUTDOOR_COMP_TYPE", 0, 1),
    r(1252, CEL, RW, "FAN_OUTDOOR_COMP_MAX_VALUE", 0, 50),
    r(1253, CEL, RW, "FAN_OUTDOOR_COMP_STOP_T_WINTER", -300, 0),
    r(1254, CEL, RW, "FAN_OUTDOOR_COMP_MAX_TEMP", -300, 0),
    r(1255, U16, RO, "FAN_OUTDOOR_COMP_RESULT", 0, 100),
    r(1256, CEL, RW, "FAN_OUTDOOR_COMP_START_T_WINTER", -300, 0),
    r(1257, CEL, RW, "FAN_OUTDOOR_COMP_START_T_SUMMER", 150, 300),
    r(1258, CEL, RW, "FAN_OUTDOOR_COMP_STOP_T_SUMMER", 150, 400),
    r(1259, CEL, RW, "FAN_OUTDOOR_COMP_VALUE_SUMMER", 0, 50),
    r(1274, U16, RW, "FAN_REGULATION_UNIT", 0, 4),
    r(1301, U16, RO, "FAN_LEVEL_SAF_MIN", UD, UD),
    r(1302, U16, RO, "FAN_LEVEL_EAF_MIN", UD, UD),
    r(1303, U16, RO, "FAN_LEVEL_SAF_LOW", UD, UD),
    r(1304, U16, RO, "FAN_LEVEL_EAF_LOW", UD, UD),
    r(1305, U16, RO, "FAN_LEVEL_SAF_NORMAL", UD, UD),
    r(1306, U16, RO, "FAN_LEVEL_EAF_NORMAL", UD, UD),
    r(1307, U16, RO, "FAN_LEVEL_SAF_HIGH", UD, UD),
    r(1308, U16, RO, "FAN_LEVEL_EAF_HIGH", UD, UD),
    r(1309, U16, RO, "FAN_LEVEL_SAF_MAX", UD, UD),
    r(1310, U16, RO, "FAN_LEVEL_EAF_MAX", UD, UD),
    r(1351, U16, RO, "SPEED_FANS_RUNNING", 0, 1),
    r(1352, U16, RO, "SPEED_SAF_DESIRED_OFF", 0, 1),
    r(1353, U16, RW, "FAN_MANUAL_STOP_ALLOWED", 0, 1),
    r(1357, U16, RO, "SPEED_ELECTRICAL_HEATER_HOT_COUNTER", UD, UD),
    r(1358, U16, RO, "FAN_SPEED_AFTER_HEATER_COOLING_DOWN_SAF", 0, 100),
    r(1359, U16, RO, "FAN_SPEED_AFTER_HEATER_COOLING_DOWN_EAF", 0, 100),
    r(1401, U16, RW, "FAN_LEVEL_SAF_MIN_PERCENTAGE", 16, 100),
    r(1402, U16, RW, "FAN_LEVEL_EAF_MIN_PERCENTAGE", 16, 100),
    r(1403, U16, RW, "FAN_LEVEL_SAF_LOW_PERCENTAGE", 16, 100),
    r(1404, U16, RW, "FAN_LEVEL_EAF_LOW_PERCENTAGE", 16, 100),
    r(1405, U16, RW, "FAN_LEVEL_SAF_NORMAL_PERCENTAGE", 16, 100),
    r(1406, U16, RW, "FAN_LEVEL_EAF_NORMAL_PERCENTAGE", 16, 100),
    r(1407, U16, RW, "FAN_LEVEL_SAF_HIGH_PERCENTAGE", 16, 100),
    r(1408, U16, RW, "FAN_LEVEL_EAF_HIGH_PERCENTAGE", 16, 100),
    r(1409, U16, RW, "FAN_LEVEL_SAF_MAX_PERCENTAGE", 16, 100),
    r(1410, U16, RW, "FAN_LEVEL_EAF_MAX_PERCENTAGE", 16, 100),
    r(1411, U16, RW, "FAN_LEVEL_SAF_MIN_RPM", 500, 5000),
    r(1412, U16, RW, "FAN_LEVEL_EAF_MIN_RPM", 500, 5000),
    r(1413, U16, RW, "FAN_LEVEL_SAF_LOW_RPM", 500, 5000),
    r(1414, U16, RW, "FAN_LEVEL_EAF_LOW_RPM", 500, 5000),
    r(1415, U16, RW, "FAN_LEVEL_SAF_NORMAL_RPM", 500, 5000),
    r(1416, U16, RW, "FAN_LEVEL_EAF_NORMAL_RPM", 500, 5000),
    r(1417, U16, RW, "FAN_LEVEL_SAF_HIGH_RPM", 500, 5000),
    r(1418, U16, RW, "FAN_LEVEL_EAF_HIGH_RPM", 500, 5000),
    r(1419, U16, RW, "FAN_LEVEL_SAF_MAX_RPM", 500, 5000),
    r(1420, U16, RW, "FAN_LEVEL_EAF_MAX_RPM", 500, 5000),
    r(1421, U16, RW, "FAN_LEVEL_SAF_MIN_PRESSURE", UD, UD),
    r(1422, U16, RW, "FAN_LEVEL_EAF_MIN_PRESSURE", UD, UD),
    r(1423, U16, RW, "FAN_LEVEL_SAF_LOW_PRESSURE", UD, UD),
    r(1424, U16, RW, "FAN_LEVEL_EAF_LOW_PRESSURE", UD, UD),
    r(1425, U16, RW, "FAN_LEVEL_SAF_NORMAL_PRESSURE", UD, UD),
    r(1426, U16, RW, "FAN_LEVEL_EAF_NORMAL_PRESSURE", UD, UD),
    r(1427, U16, RW, "FAN_LEVEL_SAF_HIGH_PRESSURE", UD, UD),
    r(1428, U16, RW, "FAN_LEVEL_EAF_HIGH_PRESSURE", UD, UD),
    r(1429, U16, RW, "FAN_LEVEL_SAF_MAX_PRESSURE", UD, UD),
    r(1430, U16, RW, "FAN_LEVEL_EAF_MAX_PRESSURE", UD, UD),
    r(1431, U16, RW, "FAN_LEVEL_SAF_MIN_FLOW", UD, UD),
    r(1432, U16, RW, "FAN_LEVEL_EAF_MIN_FLOW", UD, UD),
    r(1433, U16, RW, "FAN_LEVEL_SAF_LOW_FLOW", UD, UD),
    r(1434, U16, RW, "FAN_LEVEL_EAF_LOW_FLOW", UD, UD),
    r(1435, U16, RW, "FAN_LEVEL_SAF_NORMAL_FLOW", UD, UD),
    r(1436, U16, RW, "FAN_LEVEL_EAF_NORMAL_FLOW", UD, UD),
    r(1437, U16, RW, "FAN_LEVEL_SAF_HIGH_FLOW", UD, UD),
    r(1438, U16, RW, "FAN_LEVEL_EAF_HIGH_FLOW", UD, UD),
    r(1439, U16, RW, "FAN_LEVEL_SAF_MAX_FLOW", UD, UD),
    r(1440, U16, RW, "FAN_LEVEL_EAF_MAX_FLOW", UD, UD),
    r(1621, U16, RO, "USERMODE_REMAINING_TIME_CDI1_L", UD, UD),
    r(1622, U16, RO, "USERMODE_REMAINING_TIME_CDI1_H", UD, UD),
    r(1623, U16, RO, "USERMODE_REMAINING_TIME_CDI2_L", UD, UD),
    r(1624, U16, RO, "USERMODE_REMAINING_TIME_CDI2_H", UD, UD),
    r(1625, U16, RO, "USERMODE_REMAINING_TIME_CDI3_L", UD, UD),
    r(1626, U16, RO, "USERMODE_REMAINING_TIME_CDI3_H", UD, UD),
    r(2001, CEL, RW, "TC_SP", 120, 300),
    r(2013, CEL, RW, "TC_CASCADE_SP", 120, 400),
    r(2021, CEL, RW, "TC_CASCADE_SP_MIN", 120, 400),
    r(2022, CEL, RW, "TC_CASCADE_SP_MAX", 120, 400),
    r(2031, U16, RW, "TC_CONTROL_MODE", 0, 2),
    r(2051, CEL, RO, "TC_EAT_RAT_SP", 120, 400),
    r(2053, CEL, RO, "TC_ROOM_CTRL_SP_SATC", 120, 400),
    r(2054, CEL, RO, "TC_SP_SATC", 120, 300),
    r(2055, U16, RO, "SATC_HEAT_DEMAND", 0, 100),
    r(2061, CEL, RO, "SATC_PI_SP", 120, 300),
    r(2069, I16, RO, "SATC_PI_OUTPUT", 0, 100),
    r(2071, CEL, RO, "ROOM_CTRL_PI_SP", 120, 300),
    r(2079, I16, RO, "ROOM_CTRL_PI_OUTPUT", 0, 100),
    r(2101, U16, RO, "INPUT_EXTERNAL_CTRL_SAF", 0, 100),
    r(2102, U16, RO, "INPUT_EXTERNAL_CTRL_EAF", 0, 100),
    r(2113, CEL, RW, "HEATER_CIRC_PUMP_START_T", 0, 200),
    r(2122, U16, RW, "HEATER_CIRC_PUMP_STOP_DELAY", 0, 60),
    r(2134, U16, RW, "HEAT_EXCHANGER_COOLING_RECOVERY_ON_OFF", 0, 1),
    r(2147, U16, RO, "HEAT_EXCHANGER_RH_TRANSFER_CTRL_ENABLED", UD, UD),
    r(2148, U16, RO, "HEAT_EXCHANGER_SPEED_LIMIT_RH_TRANSFER", 0, 100),
    r(2149, U16, RO, "PWM_TRIAC_OUTPUT", 0, 100),
    r(2201, U16, RW, "ROTOR_RH_TRANSFER_CTRL_PBAND", 0, 40),
    r(2202, U16, RW, "ROTOR_RH_TRANSFER_CTRL_ITIME", 120, 0),
    r(2203, U16, RW, "ROTOR_RH_TRANSFER_CTRL_SETPOINT", 100, 45),
    r(2204, U16, RW, "ROTOR_RH_TRANSFER_CTRL_ON_OFF", 1, 1),
    r(2211, SPH, RO, "ROTOR_EA_SPEC_HUMIDITY", 0, UD),
    r(2212, SPH, RO, "ROTOR_OA_SPEC_HUMIDITY", 0, UD),
    r(2213, SPH, RO, "ROTOR_EA_SPEC_HUMIDITY_SETPOINT", 0, UD),
    r(2311, U16, RO, "COOLER_FROM_SATC", 0, 100),
    r(2314, CEL, RW, "COOLER_CIRC_PUMP_START_T", 0, 200),
    r(2315, CEL, RW, "COOLER_RECOVERY_LIMIT_T", 0, 100),
    r(2316, CEL, RW, "COOLER_OAT_INTERLOCK_T", 120, 250),
    r(2317, U16, RW, "COOLER_CIRC_PUMP_STOP_DELAY", 0, 60),
    r(2403, CEL, RW, "EXTRA_CONTROLLER_SET_PI_SETPOINT", -300, 400),
    r(2404, CEL, RW, "EXTRA_CONTROLLER_CIRC_PUMP_START_T", 0, 200),
    r(2405, U16, RW, "EXTRA_CONTROLLER_CIRC_PUMP_STOP_DELAY", 0, 60),
    r(2418, U16, RW, "EXTRA_CONTROLLER_PREHEATER_SETPOINT_TYPE", 0, 1),
    r(2420, CEL, RW, "EXTRA_CONTROLLER_GEO_PREHEATER_SP", -300, 100),
    r(2421, CEL, RW, "EXTRA_CONTROLLER_GEO_PREHEATER_ACTIVATION_T", -300, 0),
    r(2422, CEL, RW, "EXTRA_CONTROLLER_GEO_PRECOOLER_SP", 100, 300),
    r(2423, CEL, RW, "EXTRA_CONTROLLER_GEO_PRECOOLER_ACTIVATION_T", 150, 300),
    r(2451, CEL, RW, "CHANGE_OVER_CIRC_PUMP_START_T", 0, 200),
    r(2452, U16, RW, "CHANGE_OVER_CIRC_PUMP_STOP_DELAY", 0, 60),
    r(2504, CEL, RW, "ECO_T_Y1_OFFSET", 0, 100),
    r(2505, U16, RW, "ECO_MODE_ON_OFF", 0, 1),
    r(2506, U16, RO, "ECO_FUNCTION_ACTIVE", 0, 1),
    r(3101, U16, RO, "FUNCTION_ACTIVE_COOLING", UD, UD),
    r(3102, U16, RO, "FUNCTION_ACTIVE_FREE_COOLING", UD, UD),
    r(3103, U16, RO, "FUNCTION_ACTIVE_HEATING", UD, UD),
    r(3104, U16, RO, "FUNCTION_ACTIVE_DEFROSTING", UD, UD),
    r(3105, U16, RO, "FUNCTION_ACTIVE_HEAT_RECOVERY", UD, UD),
    r(3106, U16, RO, "FUNCTION_ACTIVE_COOLING_RECOVERY", UD, UD),
    r(3107, U16, RO, "FUNCTION_ACTIVE_MOISTURE_TRANSFER", UD, UD),
    r(3108, U16, RO, "FUNCTION_ACTIVE_SECONDARY_AIR", UD, UD),
    r(3109, U16, RO, "FUNCTION_ACTIVE_VACUUM_CLEANER", UD, UD),
    r(3110, U16, RO, "FUNCTION_ACTIVE_COOKER_HOOD", UD, UD),
    r(3111, U16, RO, "FUNCTION_ACTIVE_USER_LOCK", UD, UD),
    r(3112, U16, RO, "FUNCTION_ACTIVE_ECO_MODE", UD, UD),
    r(3113, U16, RO, "FUNCTION_ACTIVE_HEATER_COOL_DOWN", 0, 1),
    r(3114, U16, RO, "FUNCTION_ACTIVE_PRESSURE_GUARD", 0, 1),
    r(3115, U16, RO, "FUNCTION_ACTIVE_CDI_1", 0, 1),
    r(3116, U16, RO, "FUNCTION_ACTIVE_CDI_2", 0, 1),
    r(3117, U16, RO, "FUNCTION_ACTIVE_CDI_3", 0, 1),
    r(4101, U16, RW, "FREE_COOLING_ON_OFF", 0, 1),
    r(4102, CEL, RW, "FREE_COOLING_OUTDOOR_DAYTIME_T", 120, 300),
    r(4103, CEL, RW, "FREE_COOLING_OUTDOOR_NIGHTTIME_DEACTIVATION_HIGH_T_LIMIT", 70, 300),
    r(4104, CEL, RW, "FREE_COOLING_OUTDOOR_NIGHTTIME_DEACTIVATION_LOW_T_LIMIT", 70, 300),
    r(4105, CEL, RW, "FREE_COOLING_ROOM_CANCEL_T", 120, 300),
    r(4106, U16, RW, "FREE_COOLING_START_TIME_H", UD, UD),
    r(4107, U16, RW, "FREE_COOLING_START_TIME_M", 0, 59),
    r(4108, U16, RW, "FREE_COOLING_END_TIME_H", UD, UD),
    r(4109, U16, RW, "FREE_COOLING_END_TIME_M", 0, 59),
    r(4111, U16, RO, "FREE_COOLING_ACTIVE", 0, 1),
    r(4112, U16, RW, "FREE_COOLING_MIN_SPEED_LEVEL_SAF", 3, 5),
    r(4113, U16, RW, "FREE_COOLING_MIN_SPEED_LEVEL_EAF", 3, 5),
    r(5001, CEL, RW, "WS_T_OFFSET_ACTIVE", -100, 0),
    r(5002, CEL, RW, "WS_T_OFFSET_INACTIVE", -100, 0),
    r(5003, U16, RW, "WS_DAY1_PRD1_START_H", 0, 23),
    r(5004, U16, RW, "WS_DAY1_PRD1_START_M", 0, 59),
    r(5005, U16, RW, "WS_DAY1_PRD1_END_H", 0, 23),
    r(5006, U16, RW, "WS_DAY1_PRD1_END_M", 0, 59),
    r(5007, U16, RW, "WS_DAY1_PRD2_START_H", 0, 23),
    r(5008, U16, RW, "WS_DAY1_PRD2_START_M", 0, 59),
    r(5009, U16, RW, "WS_DAY1_PRD2_END_H", 0, 23),
    r(5010, U16, RW, "WS_DAY1_PRD2_END_M", 0, 59),
    r(5011, U16, RW, "WS_DAY2_PRD1_START_H", 0, 23),
    r(5012, U16, RW, "WS_DAY2_PRD1_START_M", 0, 59),
    r(5013, U16, RW, "WS_DAY2_PRD1_END_H", 0, 23),
    r(5014, U16, RW, "WS_DAY2_PRD1_END_M", 0, 59),
    r(5015, U16, RW, "WS_DAY2_PRD2_START_H", 0, 23),
    r(5016, U16, RW, "WS_DAY2_PRD2_START_M", 0, 59),
    r(5017, U16, RW, "WS_DAY2_PRD2_END_H", 0, 23),
    r(5018, U16, RW, "WS_DAY2_PRD2_END_M", 0, 59),
    r(5019, U16, RW, "WS_DAY3_PRD1_START_H", 0, 23),
    r(5020, U16, RW, "WS_DAY3_PRD1_START_M", 0, 59),
    r(5021, U16, RW, "WS_DAY3_PRD1_END_H", 0, 23),
    r(5022, U16, RW, "WS_DAY3_PRD1_END_M", 0, 59),
    r(5022, U16, RW, "WS_DAY3_PRD1_END_M", 0, 59),
    r(5023, U16, RW, "WS_DAY3_PRD2_START_H", 0, 23),
    r(5024, U16, RW, "WS_DAY3_PRD2_START_M", 0, 59),
    r(5025, U16, RW, "WS_DAY3_PRD2_END_H", 0, 23),
    r(5026, U16, RW, "WS_DAY3_PRD2_END_M", 0, 59),
    r(5027, U16, RW, "WS_DAY4_PRD1_START_H", 0, 23),
    r(5028, U16, RW, "WS_DAY4_PRD1_START_M", 0, 59),
    r(5029, U16, RW, "WS_DAY4_PRD1_END_H", 0, 23),
    r(5030, U16, RW, "WS_DAY4_PRD1_END_M", 0, 59),
    r(5031, U16, RW, "WS_DAY4_PRD2_START_H", 0, 23),
    r(5032, U16, RW, "WS_DAY4_PRD2_START_M", 0, 59),
    r(5033, U16, RW, "WS_DAY4_PRD2_END_H", 0, 23),
    r(5034, U16, RW, "WS_DAY4_PRD2_END_M", 0, 59),
    r(5035, U16, RW, "WS_DAY5_PRD1_START_H", 0, 23),
    r(5036, U16, RW, "WS_DAY5_PRD1_START_M", 0, 59),
    r(5037, U16, RW, "WS_DAY5_PRD1_END_H", 0, 23),
    r(5038, U16, RW, "WS_DAY5_PRD1_END_M", 0, 59),
    r(5039, U16, RW, "WS_DAY5_PRD2_START_H", 0, 23),
    r(5040, U16, RW, "WS_DAY5_PRD2_START_M", 0, 59),
    r(5041, U16, RW, "WS_DAY5_PRD2_END_H", 0, 23),
    r(5042, U16, RW, "WS_DAY5_PRD2_END_M", 0, 59),
    r(5043, U16, RW, "WS_DAY6_PRD1_START_H", 0, 23),
    r(5044, U16, RW, "WS_DAY6_PRD1_START_M", 0, 59),
    r(5045, U16, RW, "WS_DAY6_PRD1_END_H", 0, 23),
    r(5046, U16, RW, "WS_DAY6_PRD1_END_M", 0, 59),
    r(5047, U16, RW, "WS_DAY6_PRD2_START_H", 0, 23),
    r(5048, U16, RW, "WS_DAY6_PRD2_START_M", 0, 59),
    r(5049, U16, RW, "WS_DAY6_PRD2_END_H", 0, 23),
    r(5050, U16, RW, "WS_DAY6_PRD2_END_M", 0, 59),
    r(5051, U16, RW, "WS_DAY7_PRD1_START_H", 0, 23),
    r(5052, U16, RW, "WS_DAY7_PRD1_START_M", 0, 59),
    r(5053, U16, RW, "WS_DAY7_PRD1_END_H", 0, 23),
    r(5054, U16, RW, "WS_DAY7_PRD1_END_M", 0, 59),
    r(5055, U16, RW, "WS_DAY7_PRD2_START_H", 0, 23),
    r(5056, U16, RW, "WS_DAY7_PRD2_START_M", 0, 59),
    r(5057, U16, RW, "WS_DAY7_PRD2_END_H", 0, 23),
    r(5058, U16, RW, "WS_DAY7_PRD2_END_M", 0, 59),
    r(5059, U16, RO, "WS_ACTIVE", 0, 1),
    r(5060, U16, RW, "WS_FAN_LEVEL_SCHEDULED", 1, 5),
    r(5061, U16, RW, "WS_FAN_LEVEL_UNSCHEDULED", 1, 5),
    r(5101, U16, RW, "WS_DAY1_PRD1_ENABLED", 0, 1),
    r(5102, U16, RW, "WS_DAY1_PRD2_ENABLED", 0, 1),
    r(5103, U16, RW, "WS_DAY2_PRD1_ENABLED", 0, 1),
    r(5104, U16, RW, "WS_DAY2_PRD2_ENABLED", 0, 1),
    r(5105, U16, RW, "WS_DAY3_PRD1_ENABLED", 0, 1),
    r(5106, U16, RW, "WS_DAY3_PRD2_ENABLED", 0, 1),
    r(5107, U16, RW, "WS_DAY4_PRD1_ENABLED", 0, 1),
    r(5108, U16, RW, "WS_DAY4_PRD2_ENABLED", 0, 1),
    r(5109, U16, RW, "WS_DAY5_PRD1_ENABLED", 0, 1),
    r(5110, U16, RW, "WS_DAY5_PRD2_ENABLED", 0, 1),
    r(5111, U16, RW, "WS_DAY6_PRD1_ENABLED", 0, 1),
    r(5112, U16, RW, "WS_DAY6_PRD2_ENABLED", 0, 1),
    r(5113, U16, RW, "WS_DAY7_PRD1_ENABLED", 0, 1),
    r(5114, U16, RW, "WS_DAY7_PRD2_ENABLED", 0, 1),
    r(6001, U16, RW, "TIME_YEAR", 0, 2999),
    r(6002, U16, RW, "TIME_MONTH", 1, 12),
    r(6003, U16, RW, "TIME_DAY", 1, 31),
    r(6004, U16, RW, "TIME_HOUR", 0, 23),
    r(6005, U16, RW, "TIME_MINUTE", 0, 59),
    r(6006, U16, RW, "TIME_SECOND", 0, 59),
    r(6007, U16, RW, "TIME_AUTO_SUM_WIN", 0, 1),
    r(6008, U16, RW, "HOUR_FORMAT", 0, 1),
    r(6009, U16, RO, "DAY_OF_THE_WEEK", 0, 6),
    r(6010, U16, RO, "DST_PERIOD_ACTIVE", 0, 1),
    r(6011, U16, RO, "TIME_RTC_SECONDS_L", UD, UD),
    r(6012, U16, RO, "TIME_RTC_SECONDS_H", UD, UD),
    r(6021, U16, RO, "SYSTEM_START_UP_TIME_L", UD, UD),
    r(6022, U16, RO, "SYSTEM_START_UP_TIME_H", UD, UD),
    r(6101, U16, RO, "TIME_RTC", UD, UD),
    r(7001, U16, RW, "FILTER_PERIOD", 3, 15),
    r(7002, U16, RW, "FILTER_REPLACEMENT_TIME_L", UD, UD),
    r(7003, U16, RW, "FILTER_REPLACEMENT_TIME_H", UD, UD),
    r(7004, U16, RO, "FILTER_PERIOD_SET", UD, UD),
    r(7005, U16, RO, "FILTER_REMAINING_TIME_L", UD, UD),
    r(7006, U16, RO, "FILTER_REMAINING_TIME_H", UD, UD),
    r(7007, U16, RO, "FILTER_ALARM_WAS_DETECTED", UD, UD),
    r(9001, U16, RW, "SYSTEM_UNIT_FLOW", 0, 2),
    r(9002, U16, RW, "SYSTEM_UNIT_PRESSURE", 0, 1),
    r(9003, U16, RW, "SYSTEM_UNIT_TEMPERATURE", 0, 1),
    r(11401, U16, RW, "DI_CONNECTION_1", 0, 18),
    r(11402, U16, RW, "DI_CONNECTION_2", 0, 18),
    r(11421, U16, RW, "DI_CFG_POLARITY_1", 0, 1),
    r(11422, U16, RW, "DI_CFG_POLARITY_2", 0, 1),
    r(12011, U16, RW, "INPUT_ANALOG_UI_1", UD, UD),
    r(12012, U16, RW, "INPUT_ANALOG_UI_2", UD, UD),
    r(12013, U16, RW, "INPUT_ANALOG_UI_3", UD, UD),
    r(12014, U16, RW, "INPUT_ANALOG_UI_4", UD, UD),
    r(12015, U16, RW, "INPUT_ANALOG_UI_5", UD, UD),
    r(12016, U16, RO, "INPUT_ANALOG_UI_6", UD, UD),
    r(12021, U16, RW, "INPUT_DIGITAL_UI_1", 0, 1),
    r(12022, U16, RW, "INPUT_DIGITAL_UI_2", 0, 1),
    r(12023, U16, RW, "INPUT_DIGITAL_UI_3", 0, 1),
    r(12024, U16, RW, "INPUT_DIGITAL_UI_4", 0, 1),
    r(12025, U16, RW, "INPUT_DIGITAL_UI_5", 0, 1),
    r(12026, U16, RO, "INPUT_DIGITAL_UI_6", UD, UD),
    r(12031, U16, RO, "INPUT_DIGITAL_DI_1", 0, 1),
    r(12032, U16, RO, "INPUT_DIGITAL_DI_2", 0, 1),
    r(12101, CEL, RW, "SENSOR_FPT", -400, 800),
    r(12102, CEL, RW, "SENSOR_OAT", -400, 800),
    r(12103, CEL, RW, "SENSOR_SAT", -400, 800),
    r(12104, CEL, RW, "SENSOR_RAT", -400, 800),
    r(12105, CEL, RW, "SENSOR_EAT", -400, 800),
    r(12106, CEL, RW, "SENSOR_ECT", -400, 800),
    r(12107, CEL, RW, "SENSOR_EFT", -400, 800),
    r(12108, CEL, RW, "SENSOR_OHT", -400, 800),
    r(12109, U16, RW, "SENSOR_RHS", 0, 100),
    r(12112, U16, RO, "SENSOR_RGS", 0, 1),
    r(12115, U16, RW, "SENSOR_CO2S", 0, 2000),
    r(12136, U16, RW, "SENSOR_RHS_PDM", 0, 100),
    r(12151, U16, RW, "SENSOR_CO2S_1", 0, 2000),
    r(12152, U16, RW, "SENSOR_CO2S_2", 0, 2000),
    r(12153, U16, RW, "SENSOR_CO2S_3", 0, 2000),
    r(12154, U16, RW, "SENSOR_CO2S_4", 0, 2000),
    r(12155, U16, RW, "SENSOR_CO2S_5", 0, 2000),
    r(12156, U16, RO, "SENSOR_CO2S_6", UD, UD),
    r(12161, U16, RW, "SENSOR_RHS_1", 0, 100),
    r(12162, U16, RW, "SENSOR_RHS_2", 0, 100),
    r(12163, U16, RW, "SENSOR_RHS_3", 0, 100),
    r(12164, U16, RW, "SENSOR_RHS_4", 0, 100),
    r(12165, U16, RW, "SENSOR_RHS_5", 0, 100),
    r(12166, U16, RO, "SENSOR_RHS_6", 0, 100),
    r(12301, U16, RO, "SENSOR_DI_AWAY", 0, 1),
    r(12302, U16, RO, "SENSOR_DI_HOLIDAY", 0, 1),
    r(12303, U16, RO, "SENSOR_DI_FIREPLACE", 0, 1),
    r(12304, U16, RO, "SENSOR_DI_REHRESH", 0, 1),
    r(12305, U16, RO, "SENSOR_DI_CROWDED", 0, 1),
    r(12306, U16, RO, "SENSOR_DI_COOKERHOOD", 0, 1),
    r(12307, U16, RO, "SENSOR_DI_VACUUMCLEANER", 0, 1),
    r(12308, U16, RO, "SENSOR_DI_EXTERNAL_STOP", 0, 1),
    r(12309, U16, RO, "SENSOR_DI_LOAD_DETECTED", 0, 1),
    r(12310, U16, RO, "SENSOR_DI_EXTRA_CONTROLLER_EMT", 0, 1),
    r(12311, U16, RO, "SENSOR_DI_FIRE_ALARM", 0, 1),
    r(12312, U16, RO, "SENSOR_DI_CHANGE_OVER_FEEDBACK", 0, 1),
    r(12316, U16, RO, "SENSOR_DI_PRESSURE_GUARD", 0, 1),
    r(12317, U16, RO, "SENSOR_DI_CDI_1", 0, 1),
    r(12318, U16, RO, "SENSOR_DI_CDI_2", 0, 1),
    r(12319, U16, RO, "SENSOR_DI_CDI_3", 0, 1),
    r(12401, U16, RO, "SENSOR_RPM_SAF", 0, 5000),
    r(12402, U16, RO, "SENSOR_RPM_EAF", 0, 5000),
    r(12403, U16, RO, "SENSOR_FLOW_PIGGYBACK_SAF", UD, UD),
    r(12404, U16, RO, "SENSOR_FLOW_PIGGYBACK_EAF", UD, UD),
    r(12405, U16, RO, "SENSOR_DI_BYF", UD, UD),
    r(12544, CEL, RW, "SENSOR_PDM_EAT_VALUE", -400, 800),
    r(12931, U16, RW, "MANUAL_OVERRIDE_F_INPUT_UI_RH_MODE", 0, 1),
    r(12932, U16, RW, "MANUAL_OVERRIDE_F_INPUT_UI_CO2_MODE", 0, 1),
    r(12933, U16, RW, "MANUAL_OVERRIDE_F_INPUT_OAT_MODE", 0, 1),
    r(12934, U16, RW, "MANUAL_OVERRIDE_F_INPUT_SAT_MODE", 0, 1),
    r(12935, U16, RW, "MANUAL_OVERRIDE_F_INPUT_OHT_MODE", 0, 1),
    r(12936, U16, RW, "MANUAL_OVERRIDE_F_INPUT_FPT_MODE", 0, 1),
    r(12937, U16, RW, "MANUAL_OVERRIDE_F_INPUT_RAT_MODE", 0, 1),
    r(12938, U16, RW, "MANUAL_OVERRIDE_F_INPUT_EAT_MODE", 0, 1),
    r(12939, U16, RW, "MANUAL_OVERRIDE_F_INPUT_ECT_MODE", 0, 1),
    r(12940, U16, RW, "MANUAL_OVERRIDE_F_INPUT_EFT_MODE", 0, 1),
    r(12941, U16, RW, "MANUAL_OVERRIDE_F_INPUT_PDM_RH_MODE", 0, 1),
    r(12942, U16, RW, "MANUAL_OVERRIDE_F_INPUT_PDM_T_MODE", 0, 1),
    r(12943, U16, RW, "MANUAL_OVERRIDE_INPUT_SAF_RPM_MODE", 0, 1),
    r(12944, U16, RW, "MANUAL_OVERRIDE_INPUT_EAF_RPM_MODE", 0, 1),
    r(12945, U16, RW, "MANUAL_OVERRIDE_INPUT_UI6_MODE", 0, 1),
    r(12946, U16, RW, "MANUAL_OVERRIDE_INPUT_BYF_MODE", 0, 1),
    r(12947, U16, RW, "MANUAL_OVERRIDE_INPUT_PIGGYBACK1_SAF_P_MODE", 0, 1),
    r(12948, U16, RW, "MANUAL_OVERRIDE_INPUT_PIGGYBACK1_EAF_P_MODE", 0, 1),
    r(12949, U16, RW, "MANUAL_OVERRIDE_INPUT_PIGGYBACK2_SAF_P_MODE", 0, 1),
    r(12950, U16, RW, "MANUAL_OVERRIDE_INPUT_PIGGYBACK2_EAF_P_MODE", 0, 1),
    r(12951, I16, RW, "MANUAL_OVERRIDE_INPUT_AI1_VALUE", -410, 810),
    r(12952, I16, RW, "MANUAL_OVERRIDE_INPUT_AI2_VALUE", -410, 810),
    r(12953, I16, RW, "MANUAL_OVERRIDE_INPUT_AI3_VALUE", -410, 810),
    r(12954, I16, RW, "MANUAL_OVERRIDE_INPUT_AI4_VALUE", -410, 810),
    r(12955, I16, RW, "MANUAL_OVERRIDE_INPUT_AI5_VALUE", -410, 810),
    r(12956, I16, RW, "MANUAL_OVERRIDE_INPUT_AI6_VALUE", -410, 810),
    r(12957, I16, RW, "MANUAL_OVERRIDE_INPUT_AI7_VALUE", -410, 810),
    r(12958, I16, RW, "MANUAL_OVERRIDE_INPUT_DI1_VALUE", 0, 1),
    r(12959, I16, RW, "MANUAL_OVERRIDE_INPUT_DI2_VALUE", 0, 1),
    r(12960, I16, RW, "MANUAL_OVERRIDE_INPUT_UI1_VALUE", 0, 100),
    r(12961, I16, RW, "MANUAL_OVERRIDE_INPUT_UI2_VALUE", 0, 100),
    r(12962, I16, RW, "MANUAL_OVERRIDE_INPUT_UI3_VALUE", 0, 100),
    r(12963, I16, RW, "MANUAL_OVERRIDE_INPUT_UI4_VALUE", 0, 100),
    r(12964, I16, RW, "MANUAL_OVERRIDE_INPUT_UI5_VALUE", 0, 100),
    r(12983, CEL, RW, "MANUAL_OVERRIDE_F_INPUT_OAT_VALUE", -410, 810),
    r(12984, CEL, RW, "MANUAL_OVERRIDE_F_INPUT_SAT_VALUE", -410, 810),
    r(12985, CEL, RW, "MANUAL_OVERRIDE_F_INPUT_OHT_VALUE", -410, 810),
    r(12986, CEL, RW, "MANUAL_OVERRIDE_F_INPUT_FPT_VALUE", -410, 810),
    r(12987, CEL, RW, "MANUAL_OVERRIDE_F_INPUT_RAT_VALUE", -410, 810),
    r(12988, CEL, RW, "MANUAL_OVERRIDE_F_INPUT_EAT_VALUE", -410, 810),
    r(12989, CEL, RW, "MANUAL_OVERRIDE_F_INPUT_ECT_VALUE", -410, 810),
    r(12990, CEL, RW, "MANUAL_OVERRIDE_F_INPUT_EFT_VALUE", -410, 810),
    r(13201, U16, RW, "OUTPUT_TRIAC_CONFIGURED", 0, 1),
    r(13301, U16, RO, "DO1_AFTER_MUX", 0, 1),
    r(13302, U16, RO, "DO2_AFTER_MUX", 0, 1),
    r(13303, U16, RO, "DO3_AFTER_MUX", 0, 1),
    r(13304, U16, RO, "DO4_AFTER_MUX", 0, 1),
    r(13311, U16, RO, "AO1_AFTER_MUX", 0, 100),
    r(13312, U16, RO, "AO2_AFTER_MUX", 0, 100),
    r(13313, U16, RO, "AO3_AFTER_MUX", 0, 100),
    r(13314, U16, RO, "AO4_AFTER_MUX", 0, 100),
    r(13315, U16, RO, "AO5_AFTER_MUX", 0, 100),
    r(13601, U16, RW, "MANUAL_OVERRIDE_OUTPUT_SAF", 0, 1),
    r(13602, U16, RW, "MANUAL_OVERRIDE_OUTPUT_EAF", 0, 1),
    r(13801, U16, RW, "MANUAL_OVERRIDE_OUTPUT_SAF_VALUE", 0, 100),
    r(13802, U16, RW, "MANUAL_OVERRIDE_OUTPUT_EAF_VALUE", 0, 100),
    r(14001, U16, RO, "OUTPUT_SAF", 0, 100),
    r(14002, U16, RO, "OUTPUT_EAF", 0, 100),
    r(14003, U16, RO, "OUTPUT_ALARM", 0, 1),
    r(14004, U16, RO, "OUTPUT_OUTDOOR_EXTRACT_DAMPER", 0, 1),
    r(14101, U16, RO, "OUTPUT_Y1_ANALOG", 0, 100),
    r(14102, U16, RO, "OUTPUT_Y1_DIGITAL", 0, 1),
    r(14103, U16, RO, "OUTPUT_Y2_ANALOG", 0, 100),
    r(14104, U16, RO, "OUTPUT_Y2_DIGITAL", 0, 1),
    r(14201, U16, RO, "OUTPUT_Y3_ANALOG", 0, 100),
    r(14202, U16, RO, "OUTPUT_Y3_DIGITAL", 0, 1),
    r(14203, U16, RO, "OUTPUT_Y4_ANALOG", 0, 100),
    r(14204, U16, RO, "OUTPUT_Y4_DIGITAL", 0, 1),
    r(14301, U16, RO, "OUTPUT_Y1_CIRC_PUMP", UD, UD),
    r(14302, U16, RO, "OUTPUT_Y3_CIRC_PUMP", UD, UD),
    r(14303, U16, RO, "OUTPUT_Y1_Y3_CIRC_PUMP", UD, UD),
    r(14304, U16, RO, "OUTPUT_Y4_CIRC_PUMP", UD, UD),
    r(14351, U16, RO, "OUTPUT_AO1", UD, UD),
    r(14352, U16, RO, "OUTPUT_AO2", UD, UD),
    r(14353, U16, RO, "OUTPUT_AO3", UD, UD),
    r(14354, U16, RO, "OUTPUT_AO4", UD, UD),
    r(14355, U16, RO, "OUTPUT_AO5", UD, UD),
    r(14361, U16, RO, "OUTPUT_DO1", 0, 1),
    r(14362, U16, RO, "OUTPUT_DO2", 0, 1),
    r(14363, U16, RO, "OUTPUT_DO3", 0, 1),
    r(14364, U16, RO, "OUTPUT_DO4", 0, 1),
    r(14371, U16, RO, "OUTPUT_FAN_SPEED1", 0, 100),
    r(14372, U16, RO, "OUTPUT_FAN_SPEED2", 0, 100),
    r(14381, U16, RO, "OUTPUT_TRIAC", 0, 1),
    r(15002, U16, RO, "ALARM_SAF_CTRL_ALARM", 0, 3),
    r(15003, U16, RW, "ALARM_SAF_CTRL_CLEAR_ALARM", 0, 1),
    r(15009, U16, RO, "ALARM_EAF_CTRL_ALARM", 0, 3),
    r(15010, U16, RW, "ALARM_EAF_CTRL_CLEAR_ALARM", 0, 1),
    r(15016, U16, RO, "ALARM_FROST_PROT_ALARM", 0, 3),
    r(15017, U16, RW, "ALARM_FROST_PROT_CLEAR_ALARM", 0, 1),
    r(15023, U16, RO, "ALARM_DEFROSTING_ALARM", 0, 3),
    r(15024, U16, RW, "ALARM_DEFROSTING_CLEAR_ALARM", 0, 1),
    r(15030, U16, RO, "ALARM_SAF_RPM_ALARM", 0, 3),
    r(15031, U16, RW, "ALARM_SAF_RPM_CLEAR_ALARM", 0, 1),
    r(15037, U16, RO, "ALARM_EAF_RPM_ALARM", 0, 3),
    r(15038, U16, RW, "ALARM_EAF_RPM_CLEAR_ALARM", 0, 1),
    r(15058, U16, RO, "ALARM_FPT_ALARM", 0, 3),
    r(15059, U16, RW, "ALARM_FPT_CLEAR_ALARM", 0, 1),
    r(15065, U16, RO, "ALARM_OAT_ALARM", 0, 3),
    r(15066, U16, RW, "ALARM_OAT_CLEAR_ALARM", 0, 1),
    r(15072, U16, RO, "ALARM_SAT_ALARM", 0, 3),
    r(15073, U16, RW, "ALARM_SAT_CLEAR_ALARM", 0, 1),
    r(15079, U16, RO, "ALARM_RAT_ALARM", 0, 3),
    r(15080, U16, RW, "ALARM_RAT_CLEAR_ALARM", 0, 1),
    r(15086, U16, RO, "ALARM_EAT_ALARM", 0, 3),
    r(15087, U16, RW, "ALARM_EAT_CLEAR_ALARM", 0, 1),
    r(15093, U16, RO, "ALARM_ECT_ALARM", 0, 3),
    r(15094, U16, RW, "ALARM_ECT_CLEAR_ALARM", 0, 1),
    r(15100, U16, RO, "ALARM_EFT_ALARM", 0, 3),
    r(15101, U16, RW, "ALARM_EFT_CLEAR_ALARM", 0, 1),
    r(15107, U16, RO, "ALARM_OHT_ALARM", 0, 3),
    r(15108, U16, RW, "ALARM_OHT_CLEAR_ALARM", 0, 1),
    r(15114, U16, RO, "ALARM_EMT_ALARM", 0, 3),
    r(15115, U16, RW, "ALARM_EMT_CLEAR_ALARM", 0, 1),
    r(15121, U16, RO, "ALARM_RGS_ALARM", 0, 3),
    r(15122, U16, RW, "ALARM_RGS_CLEAR_ALARM", 0, 1),
    r(15128, U16, RO, "ALARM_BYS_ALARM", 0, 3),
    r(15129, U16, RW, "ALARM_BYS_CLEAR_ALARM", 0, 1),
    r(15135, U16, RO, "ALARM_SECONDARY_AIR_ALARM", 0, 3),
    r(15136, U16, RW, "ALARM_SECONDARY_AIR_CLEAR_ALARM", 0, 1),
    r(15142, U16, RO, "ALARM_FILTER_ALARM", 0, 3),
    r(15143, U16, RW, "ALARM_FILTER_CLEAR_ALARM", 0, 1),
    r(15149, U16, RO, "ALARM_EXTRA_CONTROLLER_ALARM", 0, 3),
    r(15150, U16, RW, "ALARM_EXTRA_CONTROLLER_CLEAR_ALARM", 0, 1),
    r(15156, U16, RO, "ALARM_EXTERNAL_STOP_ALARM", 0, 3),
    r(15157, U16, RW, "ALARM_EXTERNAL_STOP_CLEAR_ALARM", 0, 1),
    r(15163, U16, RO, "ALARM_RH_ALARM", 0, 3),
    r(15164, U16, RW, "ALARM_RH_CLEAR_ALARM", 0, 1),
    r(15170, U16, RO, "ALARM_CO2_ALARM", 0, 3),
    r(15171, U16, RW, "ALARM_CO2_CLEAR_ALARM", 0, 1),
    r(15177, U16, RO, "ALARM_LOW_SAT_ALARM", 0, 3),
    r(15178, U16, RW, "ALARM_LOW_SAT_CLEAR_ALARM", 0, 1),
    r(15184, U16, RO, "ALARM_BYF_ALARM", UD, UD),
    r(15185, U16, RW, "ALARM_BYF_CLEAR_ALARM", UD, 0),
    r(15502, U16, RO, "ALARM_MANUAL_OVERRIDE_OUTPUTS_ALARM", 0, 3),
    r(15503, U16, RW, "ALARM_MANUAL_OVERRIDE_OUTPUTS_CLEAR_ALARM", 0, 1),
    r(15509, U16, RO, "ALARM_PDM_RHS_ALARM", 0, 3),
    r(15510, U16, RW, "ALARM_PDM_RHS_CLEAR_ALARM", 0, 1),
    r(15516, U16, RO, "ALARM_PDM_EAT_ALARM", 0, 3),
    r(15517, U16, RW, "ALARM_PDM_EAT_CLEAR_ALARM", 0, 1),
    r(15523, U16, RO, "ALARM_MANUAL_FAN_STOP_ALARM", 0, 3),
    r(15524, U16, RW, "ALARM_MANUAL_FAN_STOP_CLEAR_ALARM", 0, 1),
    r(15530, U16, RO, "ALARM_OVERHEAT_TEMPERATURE_ALARM", 0, 3),
    r(15531, U16, RW, "ALARM_OVERHEAT_TEMPERATURE_CLEAR_ALARM", 0, 1),
    r(15537, U16, RO, "ALARM_FIRE_ALARM_ALARM", 0, 3),
    r(15538, U16, RW, "ALARM_FIRE_ALARM_CLEAR_ALARM", 0, 1),
    r(15544, U16, RO, "ALARM_FILTER_WARNING_ALARM", 0, 3),
    r(15545, U16, RW, "ALARM_FILTER_WARNING_CLEAR_ALARM", 0, 1),
    r(15549, U16, RO, "ALARM_FILTER_WARNING_ALARM_ERROR_DURATION_COUNTER", UD, UD),
    r(15701, U16, RO, "ALARM_LOG_1_ID", UD, UD),
    r(15702, U16, RO, "ALARM_LOG_1_STATE_NOW", UD, UD),
    r(15703, U16, RO, "ALARM_LOG_1_STATE_PREVIOUS", UD, UD),
    r(15704, U16, RO, "ALARM_LOG_1_YEAR", UD, UD),
    r(15705, U16, RO, "ALARM_LOG_1_MONTH", UD, UD),
    r(15706, U16, RO, "ALARM_LOG_1_DAY", UD, UD),
    r(15707, U16, RO, "ALARM_LOG_1_HOUR", UD, UD),
    r(15708, U16, RO, "ALARM_LOG_1_MINUTE", UD, UD),
    r(15709, U16, RO, "ALARM_LOG_1_SECOND", UD, UD),
    r(15710, U16, RO, "ALARM_LOG_1_CODE", UD, UD),
    r(15711, U16, RO, "ALARM_LOG_2_ID", UD, UD),
    r(15712, U16, RO, "ALARM_LOG_2_STATE_NOW", UD, UD),
    r(15713, U16, RO, "ALARM_LOG_2_STATE_PREVIOUS", UD, UD),
    r(15714, U16, RO, "ALARM_LOG_2_YEAR", UD, UD),
    r(15715, U16, RO, "ALARM_LOG_2_MONTH", UD, UD),
    r(15716, U16, RO, "ALARM_LOG_2_DAY", UD, UD),
    r(15717, U16, RO, "ALARM_LOG_2_HOUR", UD, UD),
    r(15718, U16, RO, "ALARM_LOG_2_MINUTE", UD, UD),
    r(15719, U16, RO, "ALARM_LOG_2_SECOND", UD, UD),
    r(15720, U16, RO, "ALARM_LOG_2_CODE", UD, UD),
    r(15721, U16, RO, "ALARM_LOG_3_ID", UD, UD),
    r(15722, U16, RO, "ALARM_LOG_3_STATE_NOW", UD, UD),
    r(15723, U16, RO, "ALARM_LOG_3_STATE_PREVIOUS", UD, UD),
    r(15724, U16, RO, "ALARM_LOG_3_YEAR", UD, UD),
    r(15725, U16, RO, "ALARM_LOG_3_MONTH", UD, UD),
    r(15726, U16, RO, "ALARM_LOG_3_DAY", UD, UD),
    r(15727, U16, RO, "ALARM_LOG_3_HOUR", UD, UD),
    r(15728, U16, RO, "ALARM_LOG_3_MINUTE", UD, UD),
    r(15729, U16, RO, "ALARM_LOG_3_SECOND", UD, UD),
    r(15730, U16, RO, "ALARM_LOG_3_CODE", UD, UD),
    r(15731, U16, RO, "ALARM_LOG_4_ID", UD, UD),
    r(15732, U16, RO, "ALARM_LOG_4_STATE_NOW", UD, UD),
    r(15733, U16, RO, "ALARM_LOG_4_STATE_PREVIOUS", UD, UD),
    r(15734, U16, RO, "ALARM_LOG_4_YEAR", UD, UD),
    r(15735, U16, RO, "ALARM_LOG_4_MONTH", UD, UD),
    r(15736, U16, RO, "ALARM_LOG_4_DAY", UD, UD),
    r(15737, U16, RO, "ALARM_LOG_4_HOUR", UD, UD),
    r(15738, U16, RO, "ALARM_LOG_4_MINUTE", UD, UD),
    r(15739, U16, RO, "ALARM_LOG_4_SECOND", UD, UD),
    r(15740, U16, RO, "ALARM_LOG_4_CODE", UD, UD),
    r(15741, U16, RO, "ALARM_LOG_5_ID", UD, UD),
    r(15742, U16, RO, "ALARM_LOG_5_STATE_NOW", UD, UD),
    r(15743, U16, RO, "ALARM_LOG_5_STATE_PREVIOUS", UD, UD),
    r(15744, U16, RO, "ALARM_LOG_5_YEAR", UD, UD),
    r(15745, U16, RO, "ALARM_LOG_5_MONTH", UD, UD),
    r(15746, U16, RO, "ALARM_LOG_5_DAY", UD, UD),
    r(15747, U16, RO, "ALARM_LOG_5_HOUR", UD, UD),
    r(15748, U16, RO, "ALARM_LOG_5_MINUTE", UD, UD),
    r(15749, U16, RO, "ALARM_LOG_5_SECOND", UD, UD),
    r(15750, U16, RO, "ALARM_LOG_5_CODE", UD, UD),
    r(15751, U16, RO, "ALARM_LOG_6_ID", UD, UD),
    r(15752, U16, RO, "ALARM_LOG_6_STATE_NOW", UD, UD),
    r(15753, U16, RO, "ALARM_LOG_6_STATE_PREVIOUS", UD, UD),
    r(15754, U16, RO, "ALARM_LOG_6_YEAR", UD, UD),
    r(15755, U16, RO, "ALARM_LOG_6_MONTH", UD, UD),
    r(15756, U16, RO, "ALARM_LOG_6_DAY", UD, UD),
    r(15757, U16, RO, "ALARM_LOG_6_HOUR", UD, UD),
    r(15758, U16, RO, "ALARM_LOG_6_MINUTE", UD, UD),
    r(15759, U16, RO, "ALARM_LOG_6_SECOND", UD, UD),
    r(15760, U16, RO, "ALARM_LOG_6_CODE", UD, UD),
    r(15761, U16, RO, "ALARM_LOG_7_ID", UD, UD),
    r(15762, U16, RO, "ALARM_LOG_7_STATE_NOW", UD, UD),
    r(15763, U16, RO, "ALARM_LOG_7_STATE_PREVIOUS", UD, UD),
    r(15764, U16, RO, "ALARM_LOG_7_YEAR", UD, UD),
    r(15765, U16, RO, "ALARM_LOG_7_MONTH", UD, UD),
    r(15766, U16, RO, "ALARM_LOG_7_DAY", UD, UD),
    r(15767, U16, RO, "ALARM_LOG_7_HOUR", UD, UD),
    r(15768, U16, RO, "ALARM_LOG_7_MINUTE", UD, UD),
    r(15769, U16, RO, "ALARM_LOG_7_SECOND", UD, UD),
    r(15770, U16, RO, "ALARM_LOG_7_CODE", UD, UD),
    r(15771, U16, RO, "ALARM_LOG_8_ID", UD, UD),
    r(15772, U16, RO, "ALARM_LOG_8_STATE_NOW", UD, UD),
    r(15773, U16, RO, "ALARM_LOG_8_STATE_PREVIOUS", UD, UD),
    r(15774, U16, RO, "ALARM_LOG_8_YEAR", UD, UD),
    r(15775, U16, RO, "ALARM_LOG_8_MONTH", UD, UD),
    r(15776, U16, RO, "ALARM_LOG_8_DAY", UD, UD),
    r(15777, U16, RO, "ALARM_LOG_8_HOUR", UD, UD),
    r(15778, U16, RO, "ALARM_LOG_8_MINUTE", UD, UD),
    r(15779, U16, RO, "ALARM_LOG_8_SECOND", UD, UD),
    r(15780, U16, RO, "ALARM_LOG_8_CODE", UD, UD),
    r(15781, U16, RO, "ALARM_LOG_9_ID", UD, UD),
    r(15782, U16, RO, "ALARM_LOG_9_STATE_NOW", UD, UD),
    r(15783, U16, RO, "ALARM_LOG_9_STATE_PREVIOUS", UD, UD),
    r(15784, U16, RO, "ALARM_LOG_9_YEAR", UD, UD),
    r(15785, U16, RO, "ALARM_LOG_9_MONTH", UD, UD),
    r(15786, U16, RO, "ALARM_LOG_9_DAY", UD, UD),
    r(15787, U16, RO, "ALARM_LOG_9_HOUR", UD, UD),
    r(15788, U16, RO, "ALARM_LOG_9_MINUTE", UD, UD),
    r(15789, U16, RO, "ALARM_LOG_9_SECOND", UD, UD),
    r(15790, U16, RO, "ALARM_LOG_9_CODE", UD, UD),
    r(15791, U16, RO, "ALARM_LOG_10_ID", UD, UD),
    r(15792, U16, RO, "ALARM_LOG_10_STATE_NOW", UD, UD),
    r(15793, U16, RO, "ALARM_LOG_10_STATE_PREVIOUS", UD, UD),
    r(15794, U16, RO, "ALARM_LOG_10_YEAR", UD, UD),
    r(15795, U16, RO, "ALARM_LOG_10_MONTH", UD, UD),
    r(15796, U16, RO, "ALARM_LOG_10_DAY", UD, UD),
    r(15797, U16, RO, "ALARM_LOG_10_HOUR", UD, UD),
    r(15798, U16, RO, "ALARM_LOG_10_MINUTE", UD, UD),
    r(15799, U16, RO, "ALARM_LOG_10_SECOND", UD, UD),
    r(15800, U16, RO, "ALARM_LOG_10_CODE", UD, UD),
    r(15801, U16, RO, "ALARM_LOG_11_ID", UD, UD),
    r(15802, U16, RO, "ALARM_LOG_11_STATE_NOW", UD, UD),
    r(15803, U16, RO, "ALARM_LOG_11_STATE_PREVIOUS", UD, UD),
    r(15804, U16, RO, "ALARM_LOG_11_YEAR", UD, UD),
    r(15805, U16, RO, "ALARM_LOG_11_MONTH", UD, UD),
    r(15806, U16, RO, "ALARM_LOG_11_DAY", UD, UD),
    r(15807, U16, RO, "ALARM_LOG_11_HOUR", UD, UD),
    r(15808, U16, RO, "ALARM_LOG_11_MINUTE", UD, UD),
    r(15809, U16, RO, "ALARM_LOG_11_SECOND", UD, UD),
    r(15810, U16, RO, "ALARM_LOG_11_CODE", UD, UD),
    r(15811, U16, RO, "ALARM_LOG_12_ID", UD, UD),
    r(15812, U16, RO, "ALARM_LOG_12_STATE_NOW", UD, UD),
    r(15813, U16, RO, "ALARM_LOG_12_STATE_PREVIOUS", UD, UD),
    r(15814, U16, RO, "ALARM_LOG_12_YEAR", UD, UD),
    r(15815, U16, RO, "ALARM_LOG_12_MONTH", UD, UD),
    r(15816, U16, RO, "ALARM_LOG_12_DAY", UD, UD),
    r(15817, U16, RO, "ALARM_LOG_12_HOUR", UD, UD),
    r(15818, U16, RO, "ALARM_LOG_12_MINUTE", UD, UD),
    r(15819, U16, RO, "ALARM_LOG_12_SECOND", UD, UD),
    r(15820, U16, RO, "ALARM_LOG_12_CODE", UD, UD),
    r(15821, U16, RO, "ALARM_LOG_13_ID", UD, UD),
    r(15822, U16, RO, "ALARM_LOG_13_STATE_NOW", UD, UD),
    r(15823, U16, RO, "ALARM_LOG_13_STATE_PREVIOUS", UD, UD),
    r(15824, U16, RO, "ALARM_LOG_13_YEAR", UD, UD),
    r(15825, U16, RO, "ALARM_LOG_13_MONTH", UD, UD),
    r(15826, U16, RO, "ALARM_LOG_13_DAY", UD, UD),
    r(15827, U16, RO, "ALARM_LOG_13_HOUR", UD, UD),
    r(15828, U16, RO, "ALARM_LOG_13_MINUTE", UD, UD),
    r(15829, U16, RO, "ALARM_LOG_13_SECOND", UD, UD),
    r(15830, U16, RO, "ALARM_LOG_13_CODE", UD, UD),
    r(15831, U16, RO, "ALARM_LOG_14_ID", UD, UD),
    r(15832, U16, RO, "ALARM_LOG_14_STATE_NOW", UD, UD),
    r(15833, U16, RO, "ALARM_LOG_14_STATE_PREVIOUS", UD, UD),
    r(15834, U16, RO, "ALARM_LOG_14_YEAR", UD, UD),
    r(15835, U16, RO, "ALARM_LOG_14_MONTH", UD, UD),
    r(15836, U16, RO, "ALARM_LOG_14_DAY", UD, UD),
    r(15837, U16, RO, "ALARM_LOG_14_HOUR", UD, UD),
    r(15838, U16, RO, "ALARM_LOG_14_MINUTE", UD, UD),
    r(15839, U16, RO, "ALARM_LOG_14_SECOND", UD, UD),
    r(15840, U16, RO, "ALARM_LOG_14_CODE", UD, UD),
    r(15841, U16, RO, "ALARM_LOG_15_ID", UD, UD),
    r(15842, U16, RO, "ALARM_LOG_15_STATE_NOW", UD, UD),
    r(15843, U16, RO, "ALARM_LOG_15_STATE_PREVIOUS", UD, UD),
    r(15844, U16, RO, "ALARM_LOG_15_YEAR", UD, UD),
    r(15845, U16, RO, "ALARM_LOG_15_MONTH", UD, UD),
    r(15846, U16, RO, "ALARM_LOG_15_DAY", UD, UD),
    r(15847, U16, RO, "ALARM_LOG_15_HOUR", UD, UD),
    r(15848, U16, RO, "ALARM_LOG_15_MINUTE", UD, UD),
    r(15849, U16, RO, "ALARM_LOG_15_SECOND", UD, UD),
    r(15850, U16, RO, "ALARM_LOG_15_CODE", UD, UD),
    r(15851, U16, RO, "ALARM_LOG_16_ID", UD, UD),
    r(15852, U16, RO, "ALARM_LOG_16_STATE_NOW", UD, UD),
    r(15853, U16, RO, "ALARM_LOG_16_STATE_PREVIOUS", UD, UD),
    r(15854, U16, RO, "ALARM_LOG_16_YEAR", UD, UD),
    r(15855, U16, RO, "ALARM_LOG_16_MONTH", UD, UD),
    r(15856, U16, RO, "ALARM_LOG_16_DAY", UD, UD),
    r(15857, U16, RO, "ALARM_LOG_16_HOUR", UD, UD),
    r(15858, U16, RO, "ALARM_LOG_16_MINUTE", UD, UD),
    r(15859, U16, RO, "ALARM_LOG_16_SECOND", UD, UD),
    r(15860, U16, RO, "ALARM_LOG_16_CODE", UD, UD),
    r(15861, U16, RO, "ALARM_LOG_17_ID", UD, UD),
    r(15862, U16, RO, "ALARM_LOG_17_STATE_NOW", UD, UD),
    r(15863, U16, RO, "ALARM_LOG_17_STATE_PREVIOUS", UD, UD),
    r(15864, U16, RO, "ALARM_LOG_17_YEAR", UD, UD),
    r(15865, U16, RO, "ALARM_LOG_17_MONTH", UD, UD),
    r(15866, U16, RO, "ALARM_LOG_17_DAY", UD, UD),
    r(15867, U16, RO, "ALARM_LOG_17_HOUR", UD, UD),
    r(15868, U16, RO, "ALARM_LOG_17_MINUTE", UD, UD),
    r(15869, U16, RO, "ALARM_LOG_17_SECOND", UD, UD),
    r(15870, U16, RO, "ALARM_LOG_17_CODE", UD, UD),
    r(15871, U16, RO, "ALARM_LOG_18_ID", UD, UD),
    r(15872, U16, RO, "ALARM_LOG_18_STATE_NOW", UD, UD),
    r(15873, U16, RO, "ALARM_LOG_18_STATE_PREVIOUS", UD, UD),
    r(15874, U16, RO, "ALARM_LOG_18_YEAR", UD, UD),
    r(15875, U16, RO, "ALARM_LOG_18_MONTH", UD, UD),
    r(15876, U16, RO, "ALARM_LOG_18_DAY", UD, UD),
    r(15877, U16, RO, "ALARM_LOG_18_HOUR", UD, UD),
    r(15878, U16, RO, "ALARM_LOG_18_MINUTE", UD, UD),
    r(15879, U16, RO, "ALARM_LOG_18_SECOND", UD, UD),
    r(15880, U16, RO, "ALARM_LOG_18_CODE", UD, UD),
    r(15881, U16, RO, "ALARM_LOG_19_ID", UD, UD),
    r(15882, U16, RO, "ALARM_LOG_19_STATE_NOW", UD, UD),
    r(15883, U16, RO, "ALARM_LOG_19_STATE_PREVIOUS", UD, UD),
    r(15884, U16, RO, "ALARM_LOG_19_YEAR", UD, UD),
    r(15885, U16, RO, "ALARM_LOG_19_MONTH", UD, UD),
    r(15886, U16, RO, "ALARM_LOG_19_DAY", UD, UD),
    r(15887, U16, RO, "ALARM_LOG_19_HOUR", UD, UD),
    r(15888, U16, RO, "ALARM_LOG_19_MINUTE", UD, UD),
    r(15889, U16, RO, "ALARM_LOG_19_SECOND", UD, UD),
    r(15890, U16, RO, "ALARM_LOG_19_CODE", UD, UD),
    r(15891, U16, RO, "ALARM_LOG_20_ID", UD, UD),
    r(15892, U16, RO, "ALARM_LOG_20_STATE_NOW", UD, UD),
    r(15893, U16, RO, "ALARM_LOG_20_STATE_PREVIOUS", UD, UD),
    r(15894, U16, RO, "ALARM_LOG_20_YEAR", UD, UD),
    r(15895, U16, RO, "ALARM_LOG_20_MONTH", UD, UD),
    r(15896, U16, RO, "ALARM_LOG_20_DAY", UD, UD),
    r(15897, U16, RO, "ALARM_LOG_20_HOUR", UD, UD),
    r(15898, U16, RO, "ALARM_LOG_20_MINUTE", UD, UD),
    r(15899, U16, RO, "ALARM_LOG_20_SECOND", UD, UD),
    r(15900, U16, RO, "ALARM_LOG_20_CODE", UD, UD),
    r(15901, U16, RO, "ALARM_TYPE_A", 0, 1),
    r(15902, U16, RO, "ALARM_TYPE_B", 0, 1),
    r(15903, U16, RO, "ALARM_TYPE_C", 0, 1),
    r(16001, U16, RW, "PASSWD_ADMIN", UD, UD),
    r(16002, U16, RW, "LOCKED_USER", 0, 1),
    r(16003, U16, RW, "LOCKED_FILTER", 0, 1),
    r(16004, U16, RW, "LOCKED_WEEK_SCHEDULE", 0, 1),
    r(16051, U16, RW, "PASSWD_USER_LEVEL_REQUIRED", 0, 1),
    r(16052, U16, RW, "PASSWD_FILTER_REQUIRED", 0, 1),
    r(16053, U16, RW, "PASSWD_WEEK_SCHEDULE_REQUIRED", 0, 1),
    r(16061, U16, RW, "PASSWD_PC_SETTINGS", UD, UD),
    r(16062, U16, RO, "PASSWD_PC_UNLOCKED", 0, 1),
    r(16101, U16, RW, "SUW_REQUIRED", 0, 1),
    r(17001, U16, RW, "COMM_MODBUS_ADDRESS", 0, 255),
    r(17002, U16, RW, "COMM_MODBUS_BAUD_RATE", 0, 10),
    r(17003, U16, RW, "COMM_MODBUS_PARITY", 0, 2),
    r(30101, U16, RW, "FACTORY_RESET", 3228, 3228),
    r(30103, U16, RW, "SET_USER_SAFE_CONFIG", 0, 1),
    r(30104, U16, RW, "ACTIVATE_USER_SAFE_CONFIG", 0, 1),
    r(30105, U16, RO, "USER_SAFE_CONFIG_VALID", UD, UD),
    r(30106, U16, RO, "SAFE_CONFIG_VALID", UD, UD),
]);

function d(register: number | number[], description: string) {
    if (typeof register === 'number') {
        registers.get(register)!.description = description;
    } else {
        for (let r of register) {
            d(r, description);
        }
    }
}

d(1001, "Highest value of all RH sensors");
d(1002, "Highest value of all CO2 sensors");
d(1011, "Set point for RH demand control");
d(1012, "Sensor value for RH demand control");
d(1019, "Output value for RH demand control. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1021, "Set point for CO2 demand control");
d(1022, "Sensor value for CO2 demand control");
d(1029, "Output value for CO2 demand control. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1031, "Pband setting for RH demand control");
d(1033, "Set point setting for RH demand control winter time");
d(1034, "Set point setting for RH demand control summer time");
d(1035, "Flag indicating if RH demand control is allowed");
d(1039, "Actual seasson for Demand Control\n0: Summer\n1: Winter");
d(1041, "Pband setting for CO2 demand control");
d(1043, "Set point setting for CO2 demand control");
d(1044, "Flag indicating if CO2 demand control isallowed");
d(1101, "Time delay setting for user mode Holiday");
d(1102, "Time delay setting for user mode Away");
d(1103, "Time delay setting for user mode Fire Place");
d(1104, "Time delay setting for user mode Refresh");
d(1105, "Time delay setting for user mode Crowded");
d([1111, 1112], "Remaining time for the state Holiday/Away/Fire Place/Refresh/Crowded");
d(1121, "Minimum level for Demand Control\n2: Low\n3: Normal");
d(1122, "Maximum level for user Demand Control\n3: Normal\n4: High\n5: Maximum");
d(1123, "Actual IAQ level:\n0: Economic\n1: Good\n2: Improving");
d(1131, "Fan speed level for mode Manual. Applies to both the SAF and the EAF fan.\n0: Off(1)\n2: Low\n3: Normal\n4: High\n(1): value Off only allowed if contents of register REG_FAN_MANUAL_STOP_ALLOWED is 1.");
d([1135, 1136], "Fan speed level for mode Crowded\n3: Normal\n4: High\n5: Maximum");
d([1137, 1138], "Fan speed level for mode Refresh\n3: Normal\n4: High\n5: Maximum");
d([1139, 1140], "Fan speed level for mode Fire Place\n1: Minimum\n2: Low\n3: Normal");
d([1141, 1142], "Fan speed level for mode Away. Value Off only allowed if contents of register REG_FAN_MANUAL_STOP_ALLOWED is 1.");
d([1143, 1144], "Fan speed level for mode Holiday. Value Off only allowed if contents of register REG_FAN_MANUAL_STOP_ALLOWED is 1.");
d([1145, 1146], "Fan speed level for mode Cooker Hood\n1: Minimum\n2: Low\n3: Normal");
d([1147, 1148], "Fan speed level for mode Vacuum Cleaner\n1: Minimum\n2: Low\n3: Normal");
d(1151, "Temperature setpoint offset for user mode Crowded");
d(1161, "Active User mode.\n0: Auto\n1: Manual\n2: Crowded\n3: Refresh\n4: Fireplace\n5: Away\n6: Holiday\n7: Cooker Hood\n8: Vacuum Cleaner\n9: CDI1\n10: CDI2\n11: CDI3\n12: PressureGuard");
d(1162, "New desired user mode as requested by HMI\n0: None\n1: AUTO\n2: Manual\n3: Crowded\n4: Refresh\n5: Fireplace\n6: Away\n7: Holiday");
d([
    1171,
    1172,
    1173,
    1174,
    1175,
    1176
], "Fan speed level for configurable digital input 3.\n0: Off\n1: Minimum\n2: Low\n3: Normal\n4: High\n5: Maximum");
d([1177, 1178], "Fan speed level for configurable pressure guard function.\n0: Off\n1: Minimum\n2: Low\n3: Normal\n4: High\n5: Maximum");
d([
    1181,
    1182,
    1183,
    1184,
    1185,
    1188,
    1189,
    1190
], "Off delay for DI");
d(1221, "SAF speed value for user mode Holiday. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1222, "EAF speed value for user mode Holiday. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1223, "SAF speed value for mode Cooker Hood. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1224, "EAF speed value for mode Cooker Hood. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1225, "SAF speed value for mode Vacuum Cleaner. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1226, "EAF speed value for mode Vacuum Cleaner. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1227, "SAF speed value for low fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1228, "EAF speed value for low fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1251, "Compensate only SF or both SF and EF\n0: SAF\n1: SAF/EAF");
d(1252, "Compensation value at lowest temperature.");
d(1253, "Temperature at which compensation reaches maximum value during the winter period.");
d(1254, "Temperature at which highest compensation is applied.");
d(1255, "Current outdoor compensation value");
d(1256, "Temperature at which compensation starts during the winter period.");
d(1257, "Temperature at which compensation starts during the summer period.");
d(1258, "Temperature at which compensation reaches maximum value during the summer period.");
d(1259, "Compensation value during summer period");
d(1274, "Type of fan control mode.\n0: Manual\n1: RPM\n2: VAV (Constant Pressure)\n3: CAV (Constant Flow)4: DCV (External)");
d(1301, "SAF speed value for minimum fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1302, "EAF speed value for minimum fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1303, "SAF speed value for low fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1304, "EAF speed value for low fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1305, "SAF speed value for normal fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1306, "EAF speed value for normal fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1307, "SAF speed value for high fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1308, "EAF speed value for high fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1309, "SAF speed value for maximum fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1310, "EAF speed value for maximum fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow");
d(1351, "Indicates that both fans are running");
d(1352, "Indicates that the SAF shall be turned off once the electrical reheater is cooled down.");
d(1353, "Allow manual fan stop (also as selection for user modes and Week schedule).\n0: Manual stop not allowed\n1: Manual stop allowed");
d(1357, "Electrical Heater hot counter. Count down from 120 sec.");
d(1358, "Supply Air Fan Speed Level After Heater Cooling Down");
d(1359, "Extract Air Fan Speed Level After Heater Cooling Down");
d(1401, "SAF speed value for minimum fan speed");
d(1402, "EAF speed value for minimum fan speed");
d(1403, "SAF speed value for low fan speed");
d(1404, "EAF speed value for low fan speed");
d(1405, "SAF speed value for normal fan speed");
d(1406, "EAF speed value for normal fan speed");
d(1407, "SAF speed value for high fan speed");
d(1408, "EAF speed value for high fan speed");
d(1409, "SAF speed value for maximum fan speed");
d(1410, "EAF speed value for maximum fan speed");
d(1411, "SAF speed value for minimum fan speed");
d(1412, "EAF speed value for minimum fan speed");
d(1413, "SAF speed value for low fan speed");
d(1414, "EAF speed value for low fan speed");
d(1415, "SAF speed value for normal fan speed");
d(1416, "EAF speed value for normal fan speed");
d(1417, "SAF speed value for high fan speed");
d(1418, "EAF speed value for high fan speed");
d(1419, "SAF speed value for maximum fan speed");
d(1420, "EAF speed value for maximum fan speed");
d(1421, "SAF speed value for minimum fan speed");
d(1422, "EAF speed value for minimum fan speed");
d(1423, "SAF speed value for low fan speed");
d(1424, "EAF speed value for low fan speed");
d(1425, "SAF speed value for normal fan speed");
d(1426, "EAF speed value for normal fan speed");
d(1427, "SAF speed value for high fan speed");
d(1428, "EAF speed value for high fan speed");
d(1429, "SAF speed value for maximum fan speed");
d(1430, "EAF speed value for maximum fan speed");
d(1431, "SAF speed value for minimum fan speed");
d(1432, "EAF speed value for minimum fan speed");
d(1433, "SAF speed value for low fan speed");
d(1434, "EAF speed value for low fan speed");
d(1435, "SAF speed value for normal fan speed");
d(1436, "EAF speed value for normal fan speed");
d(1437, "SAF speed value for high fan speed");
d(1438, "EAF speed value for high fan speed");
d(1439, "SAF speed value for maximum fan speed");
d(1440, "EAF speed value for maximum fan speed");
d(1621, "Remaining time");
d(1623, "Remaining time");
d(1625, "Remaining time");
d(2001, "Temperature setpoint for the supply airtemperature");
d(2013, "Temperature set point for SATC, as calculated by RATC/EATC during cascade control");
d(2021, "Minimum temperature set point for the SATC");
d(2022, "Maximum temperature set point for the SATC");
d(2031, "Unit temperature control mode\n0: Supply\n1: Room\n2: Extract");
d(2051, "EAT or RAT value, used for room/extract air controller.");
d(2053, "Temperature set point for SATC, as calculated by RATC/EATC during cascade control");
d(2054, "Temperature setpoint for the supply airtemperature");
d(2055, "Output of the SATC (0-100%)");
d(2061, "SATC setpoint value");
d(2069, "SATC output signal");
d(2071, "RATC setpoint value");
d(2079, "RATC output signal");
d(2101, "Value from External Controller Input, SAF. In %.");
d(2102, "Value from External Controller Input, EAF. In %.");
d(2113, "Temperature at which the Heater circulation pump is started");
d(2122, "Off time delay for the heater circulation pump in minutes");
d(2134, "Enabling of cooling recovery");
d(2147, "Indicates if RH trasnfer control shall beapplied");
d(2148, "As the heat exchanger unit is rotates faster, more moisture returns indoors. If there is a demand to eject moisture outdoors, the rotor speed is limited. This register determines the maximum speed of the rotor due to moisture transfer.");
d(2149, "Heater TRIAC after manual override");
d(2201, "Pband setting for RH transfer control");
d(2202, "Itime setting for RH transfer control");
d(2203, "Set point setting for RH transfer control");
d(2204, "Enabling of humidity transfer control");
d(2211, "Extract air specific humidity (g/kg)");
d(2212, "Outdoor air specific humidity at assumed 90% RH outdoors");
d(2213, "Moisture transfer control specific humidity setpoint");
d(2311, "Cooler signal");
d(2314, "Temperature at which the cooler circulation pump is started");
d(2315, "Temperature at which cooling recovery is allowed");
d(2316, "Temperature at which cooling is interlocked");
d(2317, "Off time delay for the cooler circulation pump in minutes");
d(2403, "Set point value for the extra controller PI regulator");
d(2404, "Start temperature for extra controller circulation pump");
d(2405, "Off time delay for the extra controller circulation pump in minutes");
d(2418, "Temperature setpoint for the preheater.\n0: Auto\n1: Manual");
d(2451, "Start temperature for the change-over circulation pump");
d(2452, "Off time delay for the change-over circulation pump in minutes");
d(2504, "Temperature offset for heating during Eco mode");
d(2505, "Enabling of eco mode");
d(2506, "Indicates if conditions for ECO mode are");
d(3101, "Is the function currently active?");
d(3102, "Is the function currently active?");
d(3103, "Is the function currently active?");
d(3104, "Is the function currently active?");
d(3105, "Is the function currently active?");
d(3106, "Is the function currently active?");
d(3107, "Is the function currently active?");
d(3108, "Is the function currently active?");
d(3109, "Is the function currently active?");
d(3110, "Is the function currently active?");
d(3111, "Is the function currently active?");
d(3112, "Is the function currently active?");
d(3113, "Is the function currently active?");
d(3114, "Is the function currently active?");
d(3115, "Is the function currently active?");
d(3116, "Is the function currently active?");
d(3117, "Is the function currently active?");
d(4101, "Indicates if free cooling is enabled");
d(4102, "Minimum of highest daytime temperature for start of free cooling.");
d(4103, "Highest night temperature limit for termination free cooling");
d(4104, "Lowest night temperature limit for termination free cooling");
d(4105, "Lowest temperature room temperature for termination of free cooling");
d(4106, "Start time of free cooling night-period, hour. Valid range is from 0 to 8 and from 21 to 23.");
d(4107, "Start time of free cooling night-period, Minute");
d(4108, "End time of free cooling night-period, hour. Valid range is from 0 to 8 and from 21 to 23.");
d(4109, "End time of free cooling night-period, Minute");
d(4111, "Indicates if free cooling is being performed");
d(4112, "Minimum speed level during free cooling, SAF.\n3: Normal\n4: High\n5: Maximum");
d(4113, "Minimum speed level during free cooling, EAF.\n3: Normal\n4: High\n5: Maximum");
d(5001, "Temperature offset during active week schedule.");
d(5002, "Temperature offset during inactive week schedule.");
d(5003, "Monday, Period 1, start");
d(5005, "Monday, Period 1, end");
d(5007, "Monday, Period 2, start");
d(5009, "Monday, Period 2, end");
d(5011, "Tuesday, Period 1, start");
d(5013, "Tuesday, Period 1, end");
d(5015, "Tuesday, Period 2, start");
d(5017, "Tuesday, Period 2, end");
d(5019, "Wednesday, Period 1, start");
d(5021, "Wednesday, Period 1, end");
d(5023, "Wednesday, Period 2, start");
d(5025, "Wednesday, Period 2, end");
d(5027, "Thursday, Period 1, start");
d(5029, "Thursday, Period 1, end");
d(5031, "Thursday, Period 2, start");
d(5033, "Thursday, Period 2, end");
d(5035, "Friday, Period 1, start");
d(5037, "Friday, Period 1, end");
d(5039, "Friday, Period 2, start");
d(5041, "Friday, Period 2, end");
d(5043, "Saturday, Period 1, start");
d(5045, "Saturday, Period 1, end");
d(5047, "Saturday, Period 2, start");
d(5049, "Saturday, Period 2, end");
d(5051, "Sunday, Period 1, start");
d(5053, "Sunday, Period 1, end");
d(5055, "Sunday, Period 2, start");
d(5057, "Sunday, Period 2, end");
d(5059, "Indicates that the current time lays within the indicated intervals");
d(5060, "Fan speed levels for SAF and EAF during active week schedule.\n1: Off(1)\n2: Low\n3: Normal\n4: High\n5: Demand(2)\n(1): Off available if Manual Fan Stop is enabled.\n(2): Demand available if demand control active or external fan control enabled.");
d(5061, "Fan speed levels for SAF and EAF during inactive week schedule.\n1: Off(1)\n2: Low\n3: Normal\n4: High\n5: Demand(2)\n(1): Off available if Manual Fan Stop is enabled.\n(2): Demand available if demand control active or external fan control enabled.");
d(5101, "Flag indicating if this period is enabled.");
d(5102, "Flag indicating if this period is enabled.");
d(5103, "Flag indicating if this period is enabled.");
d(5104, "Flag indicating if this period is enabled.");
d(5105, "Flag indicating if this period is enabled.");
d(5106, "Flag indicating if this period is enabled.");
d(5107, "Flag indicating if this period is enabled.");
d(5108, "Flag indicating if this period is enabled.");
d(5109, "Flag indicating if this period is enabled.");
d(5110, "Flag indicating if this period is enabled.");
d(5111, "Flag indicating if this period is enabled.");
d(5112, "Flag indicating if this period is enabled.");
d(5113, "Flag indicating if this period is enabled.");
d(5114, "Flag indicating if this period is enabled.");
d(6001, "Current time");
d(6002, "Current time");
d(6003, "Current time");
d(6004, "Current time");
d(6005, "Current time");
d(6006, "Current time");
d(6007, "Flag indicating if DST is enabled.\n0: Daylight saving time not enabled\n1: Daylight saving time enabled");
d(6008, "Indicaties the presentation of time in the HMI. 24H/12H");
d(6009, "Monday (0)...Sunday (6)");
d(6011, "Now time in seconds. Lower 16 bits.");
d(6012, "Now time in seconds. Higher 16 bits.");
d(6101, "RTC value in seconds, highest 16 bits");
d(7001, "Filter replacement time in months");
d(7002, "Timestamp of latest filter replcement, lower 16 bits");
d(7003, "Timestamp of latest filter replcement, higher 16 bits");
d(7004, "Indicates that the LastFilterReplacementTime shall be set Now.");
d(7005, "Remaining filter time in seconds, lower 16 bits.");
d(7006, "Remaining filter time in seconds, higher 16 bits.");
d(7007, "Indicates if the filter warning alarm wasgenerated.");
d(9001, "Unit for CAV control mode.\n0: l/s 1: m3/h2:cfm");
d(9002, "Units for VAV control mode.\n0: Pa 1: InH2O");
d(9003, "Units for temperature.\n0: Celcius\n1: Fahrenheit");
d(11401, "Indicates what kind of DI functionality is connected to DI1.\n0: None /Away/BYP/Vacuum Cleaner/Cooker Hood/Crowded/EMT/External Stop/Extra Controller Alarm/Fireplace/Holiday/Refresh/RGS/Change Over Feedback/ 14: Fire Alarm/Configurable DI1/Configurable DI2/Configurable DI3/ 18: Pressure Guard");
d(11402, "Indicates what kind of DI functionality is connected to DI1.\n0: None /Away/BYP/Vacuum Cleaner/Cooker Hood/Crowded/EMT/External Stop/Extra Controller Alarm/Fireplace/Holiday/Refresh/RGS/Change Over Feedback/ 14: Fire Alarm/Configurable DI1/Configurable DI2/Configurable DI3/ 18: Pressure Guard");
d(11421, "Polarity of DI1.\n0: NO\n1: NC");
d(11422, "Polarity of DI1.\n0: NO\n1: NC");
d(12011, "mV");
d(12012, "mV");
d(12013, "mV");
d(12014, "mV");
d(12015, "mV");
d(12016, "mV");
d(12021, "State of UI1");
d(12022, "State of UI2");
d(12023, "State of UI3");
d(12024, "State of UI4");
d(12025, "State of UI5");
d(12026, "State of UI6");
d(12031, "Boolean");
d(12032, "Boolean");
d(12101, "Frost Protection Temperature sensor value (Water Heater)");
d(12102, "Outdoor Air Temperature sensor (standard)");
d(12103, "Supply Air Temperature sensor (standard)");
d(12104, "Room Air Temperature sensor (accessory)");
d(12105, "Extract Air Temperature sensor (accessory)");
d(12106, "Extra Controller Temperature sensor (accessory)");
d(12107, "Efficiency temperature sensor (accessory)");
d(12108, "Over Heat Temperature sensor (Electrical Heater)");
d(12109, "Relative Humidity Sensor (Accessory)");
d(12112, "Rotating guard Sensor input");
d(12115, "CO2 value (accessory)");
d(12136, "PDM RHS sensor value (standard)");
d(12151, "CO2 sensor value - UI1 (accessory)");
d(12152, "CO2 sensor value - UI2 (accessory)");
d(12153, "CO2 sensor value - UI3 (accessory)");
d(12154, "CO2 sensor value - UI4 (accessory)");
d(12155, "CO2 sensor value - UI5 (accessory)");
d(12156, "CO2 sensor value - UI6 (accessory)");
d(12161, "RH sensor value - UI1 (accessory)");
d(12162, "RH sensor value - UI2 (accessory)");
d(12163, "RH sensor value - UI3 (accessory)");
d(12164, "RH sensor value - UI4 (accessory)");
d(12165, "RH sensor value - UI5 (accessory)");
d(12166, "RH sensor value - UI6 (accessory)");
d(12301, "Value of physical Digital Input of Away function");
d(12302, "Value of physical Digital Input of Holiday function");
d(12303, "Value of physical Digital Input of Fireplace function");
d(12304, "Value of physical Digital Input of Refresh function");
d(12305, "Value of physical Digital Input of Crowded function");
d(12306, "Value of physical Digital Input of Cookerhood function");
d(12307, "Value of physical Digital Input of Vacuum Cleaner function");
d(12308, "External Stop input value");
d(12309, "Load Detected input value");
d(12310, "Extra controller EMT input value");
d(12311, "Fire Alarm input value");
d(12312, "Change over feedback value");
d(12316, "Indicates if physical DI is active");
d(12317, "Indicates if physical DI is active");
d(12318, "Indicates if physical DI is active");
d(12319, "Indicates if physical DI is active");
d(12401, "Supply Air Fan RPM indication from TACHO");
d(12402, "Extract Air Fan RPM indication from TACHO");
d(12403, "Flow value calculated from piggyback pressure sensor.");
d(12404, "Flow value calculated from piggyback pressure sensor.");
d(12405, "Value from Bypass Damper Feedback input.In %.");
d(12544, "PDM EAT sensor value (standard)");
d(12931, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12932, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12933, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12934, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12935, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12936, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12937, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12938, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12939, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12940, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12941, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12942, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12943, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12944, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12945, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12946, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12947, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12948, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12949, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12950, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE");
d(12951, "Value to override the device input with.");
d(12952, "Value to override the device input with.");
d(12953, "Value to override the device input with.");
d(12954, "Value to override the device input with.");
d(12955, "Value to override the device input with.");
d(12956, "Value to override the device input with.");
d(12957, "Value to override the device input with.");
d(12958, "Value to override the device input with.");
d(12959, "Value to override the device input with.");
d(12960, "Value to override the device input with.");
d(12961, "Value to override the device input with.");
d(12962, "Value to override the device input with.");
d(12963, "Value to override the device input with.");
d(12964, "Value to override the device input with.");
d(12983, "Value to override the device input with.");
d(12984, "Value to override the device input with.");
d(12985, "Value to override the device input with.");
d(12986, "Value to override the device input with.");
d(12987, "Value to override the device input with.");
d(12988, "Value to override the device input with.");
d(12989, "Value to override the device input with.");
d(12990, "Value to override the device input with.");
d(13201, "Indicates if the TRIAC shall be used");
d(13301, "Digital output after multiplexer");
d(13302, "Digital output after multiplexer");
d(13303, "Digital output after multiplexer");
d(13304, "Digital output after multiplexer");
d(13311, "Analog output after multiplexer");
d(13312, "Analog output after multiplexer");
d(13313, "Analog output after multiplexer");
d(13314, "Analog output after multiplexer");
d(13315, "Analog output after multiplexer");
d(13601, "SAF Override.\n0: Auto 1: Manual");
d(13602, "EAF Override.\n0: Auto 1: Manual");
d(13801, "SAF Override value in % if manual (1) selected");
d(13802, "EAF override value in % if manual (1) selected");
d(14001, "SAF fan speed");
d(14002, "EAF fan speed");
d(14003, "Sum Alarm DO\n0: Output not active\n1: Output active");
d(14004, "Indicates if Outdoor/Exhaust air dampersignal is On/Off");
d(14101, "Heater AO state.");
d(14102, "Heater DO state:\n0: Output not active\n1: Output active");
d(14103, "Heat Exchanger AO state.");
d(14104, "Heat Exchanger DO state.\n0: Output notactive\n1: Output active");
d(14201, "Cooler AO state.");
d(14202, "Cooler DO state:\n0: Output not active\n1: Output active");
d(14203, "Extra controller AO state.");
d(14204, "Extra controller DO state:\n0: Output not active\n1: Output active");
d(14301, "Heating circulation pump output");
d(14302, "Cooler circulation pump output");
d(14303, "Change-over circulation pump output");
d(14304, "Extra controller circulation pump output");
d(14351, "Voltage signal from AO1");
d(14352, "Voltage signal from AO2");
d(14353, "Voltage signal from AO3");
d(14354, "Voltage signal from AO4");
d(14355, "Voltage signal from AO5");
d(14361, "State of DO1");
d(14362, "State of DO2");
d(14363, "State of DO3");
d(14364, "State of DO4");
d(14371, "Supply air fan control signal in %");
d(14372, "Extract air fan control signal in %");
d(14381, "TRIAC control signal");
d(15002, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15003, "Signal to clear the alarm");
d(15009, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15010, "Signal to clear the alarm");
d(15016, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15017, "Signal to clear the alarm");
d(15023, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15024, "Signal to clear the alarm");
d(15030, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15031, "Signal to clear the alarm");
d(15037, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15038, "Signal to clear the alarm");
d(15058, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15059, "Signal to clear the alarm");
d(15065, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15066, "Signal to clear the alarm");
d(15072, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15073, "Signal to clear the alarm");
d(15079, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15080, "Signal to clear the alarm");
d(15086, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15087, "Signal to clear the alarm");
d(15093, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15094, "Signal to clear the alarm");
d(15100, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15101, "Signal to clear the alarm");
d(15107, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15108, "Signal to clear the alarm");
d(15114, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15115, "Signal to clear the alarm");
d(15121, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15122, "Signal to clear the alarm");
d(15128, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15129, "Signal to clear the alarm");
d(15135, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15136, "Signal to clear the alarm");
d(15142, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15143, "Signal to clear the alarm");
d(15149, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15150, "Signal to clear the alarm");
d(15156, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15157, "Signal to clear the alarm");
d(15163, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15164, "Signal to clear the alarm");
d(15170, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15171, "Signal to clear the alarm");
d(15177, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15178, "Signal to clear the alarm");
d(15184, "Alarm active/inactive\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15185, "Signal to clear the alarm");
d(15502, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15503, "Signal to clear the alarm");
d(15509, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15510, "Signal to clear the alarm");
d(15516, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15517, "Signal to clear the alarm");
d(15523, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15524, "Signal to clear the alarm");
d(15530, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15531, "Signal to clear the alarm");
d(15537, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15538, "Signal to clear the alarm");
d(15544, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active");
d(15545, "Signal to clear the alarm");
d(15549, "Counter for delay");
d([
    15701,
    15702,
    15703,
    15704,
    15705,
    15706,
    15707,
    15708,
    15709,
    15710,
    15711,
    15712,
    15713,
    15714,
    15715,
    15716,
    15717,
    15718,
    15719,
    15720,
    15721,
    15722,
    15723,
    15724,
    15725,
    15726,
    15727,
    15728,
    15729,
    15730,
    15731,
    15732,
    15733,
    15734,
    15735,
    15736,
    15737,
    15738,
    15739,
    15740,
    15741,
    15742,
    15743,
    15744,
    15745,
    15746,
    15747,
    15748,
    15749,
    15750,
    15751,
    15752,
    15753,
    15754,
    15755,
    15756,
    15757,
    15758,
    15759,
    15760,
    15761,
    15762,
    15763,
    15764,
    15765,
    15766,
    15767,
    15768,
    15769,
    15770,
    15771,
    15772,
    15773,
    15774,
    15775,
    15776,
    15777,
    15778,
    15779,
    15780,
    15781,
    15782,
    15783,
    15784,
    15785,
    15786,
    15787,
    15788,
    15789,
    15790,
    15791,
    15792,
    15793,
    15794,
    15795,
    15796,
    15797,
    15798,
    15799,
    15800,
    15801,
    15802,
    15803,
    15804,
    15805,
    15806,
    15807,
    15808,
    15809,
    15810,
    15811,
    15812,
    15813,
    15814,
    15815,
    15816,
    15817,
    15818,
    15819,
    15820,
    15821,
    15822,
    15823,
    15824,
    15825,
    15826,
    15827,
    15828,
    15829,
    15830,
    15831,
    15832,
    15833,
    15834,
    15835,
    15836,
    15837,
    15838,
    15839,
    15840,
    15841,
    15842,
    15843,
    15844,
    15845,
    15846,
    15847,
    15848,
    15849,
    15850,
    15851,
    15852,
    15853,
    15854,
    15855,
    15856,
    15857,
    15858,
    15859,
    15860,
    15861,
    15862,
    15863,
    15864,
    15865,
    15866,
    15867,
    15868,
    15869,
    15870,
    15871,
    15872,
    15873,
    15874,
    15875,
    15876,
    15877,
    15878,
    15879,
    15880,
    15881,
    15882,
    15883,
    15884,
    15885,
    15886,
    15887,
    15888,
    15889,
    15890,
    15891,
    15892,
    15893,
    15894,
    15895,
    15896,
    15897,
    15898,
    15899,
    15900
], "Alarm log information");
d(15901, "Indicates if an alarm Type A is active");
d(15902, "Indicates if an alarm Type B is active");
d(15903, "Indicates if an alarm Type C is active");
d(16001, "Administrator password.Bit 12-15: digit 1\nBit 8-11: digit 2\nBit 4-7: digit 3\nBit 0-3: digit 4");
d(16002, "Indicates if the User level is locked.\n0: User menu locked\n1: User menu not locked");
d(16003, "Indicates if the Filter menu is locked.\n0: menu locked\n1: menu not locked");
d(16004, "Indicates if the Week schedule menu islocked.\n0: menu locked\n1: menu not locked");
d(16051, "Home screen lock");
d(16052, "Filter Change menu lock");
d(16053, "Week schedule menu lock");
d(16101, "Indicates if the start-up wizard shall beactivated.");
d(17001, "Modbus address of the MB.Only relevant if the MB is a modbus slave.");
d(17002, "Baudrate of the modbus connection\n0=1200\n1=2400\n2=4800\n3=9600\n4=14400\n5=19200\n6=28800\n7=38400\n8=57600\n9=76800\n10=115200");
d(17003, "Parity setting for the modbus connection.\n0: None\n1: Even\n2: Odd");
d(30101, "Activates setting of the parameters to their default values. Only activated by writing 3228 to this register.");

const virtual_registers = new Map<number, RegisterDescription>([
    r(15000, DataType.ALARMS15000, RO, "ALARMS_150XX", 0, 1),
    r(15100, DataType.ALARMS15100, RO, "ALARMS_151XX", 0, 1),
    r(15500, DataType.ALARMS15500, RO, "ALARMS_155XX", 0, 1),
]);

export { registers, virtual_registers };
