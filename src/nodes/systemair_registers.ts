import { RegisterDescription, DataType, RegisterType } from "./systemair_types";

function r(
    name: string,
    data_type: DataType,
    register_type: RegisterType,
    modbus_address: number,
    minimum?: number,
    maximum?: number,
    description?: string) : [ register: number, description: RegisterDescription ]
{
    const address = ~~modbus_address;
    return [ ~~modbus_address, {
        name: name,
        data_type: data_type,
        register_type: register_type,
        modbus_address: address,
        description: description ?? "",
    }];

}

const registers = new Map<number, RegisterDescription>([
 r("DEMC_RH_HIGHEST", DataType.U16, RegisterType.ReadOnly, 1001, 0, 100, "Highest value of all RH sensors"),
 r("DEMC_CO2_HIGHEST", DataType.U16, RegisterType.ReadOnly, 1002, 0, 2000, "Highest value of all CO2 sensors"),
 r("DEMC_RH_PI_SP", DataType.U16, RegisterType.ReadOnly, 1011, 0, 100, "Set point for RH demand control"),
 r("DEMC_RH_PI_FEEDBACK", DataType.U16, RegisterType.ReadOnly, 1012, 0, 100, "Sensor value for RH demand control"),
 r("DEMC_RH_PI_OUTPUT", DataType.U16, RegisterType.ReadOnly, 1019, undefined, undefined, "Output value for RH demand control. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("DEMC_CO2_PI_SP", DataType.U16, RegisterType.ReadOnly, 1021, 0, 2000, "Set point for CO2 demand control"),
 r("DEMC_CO2_PI_FEEDBACK", DataType.U16, RegisterType.ReadOnly, 1022, 0, 2000, "Sensor value for CO2 demand control"),
 r("DEMC_CO2_PI_OUTPUT", DataType.U16, RegisterType.ReadOnly, 1029, undefined, undefined, "Output value for CO2 demand control. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("DEMC_RH_SETTINGS_PBAND", DataType.U16, RegisterType.ReadWrite, 1031, 1, 100, "Pband setting for RH demand control"),
 r("DEMC_RH_SETTINGS_SP_SUMMER", DataType.U16, RegisterType.ReadWrite, 1033, 10, 100, "Set point setting for RH demand control winter time"),
 r("DEMC_RH_SETTINGS_SP_WINTER", DataType.U16, RegisterType.ReadWrite, 1034, 10, 100, "Set point setting for RH demand control summer time"),
 r("DEMC_RH_SETTINGS_ON_OFF", DataType.U16, RegisterType.ReadWrite, 1035, 0, 1, "Flag indicating if RH demand control is allowed"),
 r("SUMMER_WINTER", DataType.U16, RegisterType.ReadOnly, 1039, 0, 1, "Actual seasson for Demand Control\n0: Summer\n1: Winter"),
 r("DEMC_CO2_SETTINGS_PBAND", DataType.U16, RegisterType.ReadWrite, 1041, 50, 2000, "Pband setting for CO2 demand control"),
 r("DEMC_CO2_SETTINGS_SP", DataType.U16, RegisterType.ReadWrite, 1043, 100, 2000, "Set point setting for CO2 demand control"),
 r("DEMC_CO2_SETTINGS_ON_OFF", DataType.U16, RegisterType.ReadWrite, 1044, 0, 1, "Flag indicating if CO2 demand control isallowed"),
 r("USERMODE_HOLIDAY_TIME", DataType.U16, RegisterType.ReadWrite, 1101, 1, 365, "Time delay setting for user mode Holiday"),
 r("USERMODE_AWAY_TIME", DataType.U16, RegisterType.ReadWrite, 1102, 1, 72, "Time delay setting for user mode Away"),
 r("USERMODE_FIREPLACE_TIME", DataType.U16, RegisterType.ReadWrite, 1103, 1, 60, "Time delay setting for user mode Fire Place"),
 r("USERMODE_REFRESH_TIME", DataType.U16, RegisterType.ReadWrite, 1104, 1, 240, "Time delay setting for user mode Refresh"),
 r("USERMODE_CROWDED_TIME", DataType.U16, RegisterType.ReadWrite, 1105, 1, 8, "Time delay setting for user mode Crowded"),
 r("USERMODE_REMAINING_TIME_L", DataType.U16, RegisterType.ReadOnly, 1111, undefined, undefined, "Remaining time for the state Holiday/Away/Fire Place/Refresh/Crowded"),
 r("USERMODE_REMAINING_TIME_H", DataType.U16, RegisterType.ReadOnly, 1112, undefined, undefined, "Remaining time for the state Holiday/Away/Fire Place/Refresh/Crowded"),
 r("IAQ_SPEED_LEVEL_MIN", DataType.U16, RegisterType.ReadWrite, 1121, 2, 3, "Minimum level for Demand Control\n2: Low\n3: Normal"),
 r("IAQ_SPEED_LEVEL_MAX", DataType.U16, RegisterType.ReadWrite, 1122, 3, 5, "Maximum level for user Demand Control\n3: Normal\n4: High\n5: Maximum"),
 r("IAQ_LEVEL", DataType.U16, RegisterType.ReadOnly, 1123, 0, 2, "Actual IAQ level:\n0: Economic\n1: Good\n2: Improving"),
 r("USERMODE_MANUAL_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1131, 0, 4, "Fan speed level for mode Manual. Applies to both the SAF and the EAF fan.\n0: Off(1)\n2: Low\n3: Normal\n4: High\n(1): value Off only allowed if contents of register REG_FAN_MANUAL_STOP_ALLOWED is 1."),
 r("USERMODE_CROWDED_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1135, 3, 5, "Fan speed level for mode Crowded\n3: Normal\n4: High\n5: Maximum"),
 r("USERMODE_CROWDED_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1136, 3, 5, "Fan speed level for mode Crowded\n3: Normal\n4: High\n5: Maximum"),
 r("USERMODE_REFRESH_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1137, 3, 5, "Fan speed level for mode Refresh\n3: Normal\n4: High\n5: Maximum"),
 r("USERMODE_REFRESH_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1138, 3, 5, "Fan speed level for mode Refresh\n3: Normal\n4: High\n5: Maximum"),
 r("USERMODE_FIREPLACE_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1139, 3, 5, "Fan speed level for mode Fire Place\n3: Normal\n4: High\n5: Maximum"),
 r("USERMODE_FIREPLACE_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1140, 1, 3, "Fan speed level for mode Fire Place\n1: Minimum\n2: Low\n3: Normal"),
 r("USERMODE_AWAY_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1141, 0, 3, "Fan speed level for mode Away. Value Off only allowed if contents of register REG_FAN_MANUAL_STOP_ALLOWED is 1."),
 r("USERMODE_AWAY_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1142, 0, 3, "Fan speed level for mode Away. Value Off only allowed if contents of register REG_FAN_MANUAL_STOP_ALLOWED is 1."),
 r("USERMODE_HOLIDAY_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1143, 0, 3, "Fan speed level for mode Holiday. Value Off only allowed if contents of register REG_FAN_MANUAL_STOP_ALLOWED is 1."),
 r("USERMODE_HOLIDAY_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1144, 0, 3, "Fan speed level for mode Holiday. Value Off only allowed if contents of register REG_FAN_MANUAL_STOP_ALLOWED is 1."),
 r("USERMODE_COOKERHOOD_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1145, 1, 5, "Fan speed level for mode Cooker Hood\n2: Low\n3: Normal\n4: High"),
 r("USERMODE_COOKERHOOD_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1146, 1, 5, "Fan speed level for mode Cooker Hood\n1: Minimum\n2: Low\n3: Normal"),
 r("USERMODE_VACUUMCLEANER_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1147, 1, 5, "Fan speed level for mode Vacuum Cleaner\n2: Low\n3: Normal\n4: High"),
 r("USERMODE_VACUUMCLEANER_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1148, 1, 5, "Fan speed level for mode Vacuum Cleaner\n1: Minimum\n2: Low\n3: Normal"),
 r("USERMODE_CROWDED_T_OFFSET", DataType.I16, RegisterType.ReadWrite, 1151, -100, 0, "Temperature setpoint offset for user mode Crowded"),
 r("USERMODE_MODE", DataType.U16, RegisterType.ReadOnly, 1161, 0, 12, "Active User mode.\n0: Auto\n1: Manual\n2: Crowded\n3: Refresh\n4: Fireplace\n5: Away\n6: Holiday\n7: Cooker Hood\n8: Vacuum Cleaner\n9: CDI1\n10: CDI2\n11: CDI3\n12: PressureGuard"),
 r("USERMODE_HMI_CHANGE_REQUEST", DataType.U16, RegisterType.ReadWrite, 1162, 0, 7, "New desired user mode as requested by HMI\n0: None\n1: AUTO\n2: Manual\n3: Crowded\n4: Refresh\n5: Fireplace\n6: Away\n7: Holiday"),
 r("CDI_1_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1171, 0, 5, "Fan speed level for configurable digital input 1.\n0: Off\n1: Minimum\n2: Low\n3: Normal\n4: High\n5: Maximum"),
 r("CDI_1_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1172, 0, 5, "Fan speed level for configurable digital input 1.\n0: Off\n1: Minimum\n2: Low\n3: Normal\n4: High\n5: Maximum"),
 r("CDI_2_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1173, 0, 5, "Fan speed level for configurable digital input 2.\n0: Off\n1: Minimum\n2: Low\n3: Normal\n4: High\n5: Maximum"),
 r("CDI_2_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1174, 0, 5, "Fan speed level for configurable digital input 2.\n0: Off\n1: Minimum\n2: Low\n3: Normal\n4: High\n5: Maximum"),
 r("CDI_3_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1175, 0, 5, "Fan speed level for configurable digital input 3.\n0: Off\n1: Minimum\n2: Low\n3: Normal\n4: High\n5: Maximum"),
 r("CDI_3_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1176, 0, 5, "Fan speed level for configurable digital input 3.\n0: Off\n1: Minimum\n2: Low\n3: Normal\n4: High\n5: Maximum"),
 r("PRESSURE_GUARD_AIRFLOW_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 1177, 0, 5, "Fan speed level for configurable pressure guard function.\n0: Off\n1: Minimum\n2: Low\n3: Normal\n4: High\n5: Maximum"),
 r("PRESSURE_GUARD_AIRFLOW_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 1178, 0, 5, "Fan speed level for configurable pressure guard function.\n0: Off\n1: Minimum\n2: Low\n3: Normal\n4: High\n5: Maximum"),
 r("USERMODE_HOLIDAY_DI_OFF_DELAY", DataType.U16, RegisterType.ReadWrite, 1181, 0, 365, "Off delay for DI"),
 r("USERMODE_AWAY_DI_OFF_DELAY", DataType.U16, RegisterType.ReadWrite, 1182, 0, 72, "Off delay for DI"),
 r("USERMODE_FIRPLACE_DI_OFF_DELAY", DataType.U16, RegisterType.ReadWrite, 1183, 0, 60, "Off delay for DI"),
 r("USERMODE_REFRESH_DI_OFF_DELAY", DataType.U16, RegisterType.ReadWrite, 1184, 0, 240, "Off delay for DI"),
 r("USERMODE_CROWDED_DI_OFF_DELAY", DataType.U16, RegisterType.ReadWrite, 1185, 0, 8, "Off delay for DI"),
 r("CDI1_OFF_DELAY", DataType.U16, RegisterType.ReadWrite, 1188, 0, 240, "Off delay for DI"),
 r("CDI2_OFF_DELAY", DataType.U16, RegisterType.ReadWrite, 1189, 0, 240, "Off delay for DI"),
 r("CDI3_OFF_DELAY", DataType.U16, RegisterType.ReadWrite, 1190, 0, 240, "Off delay for DI"),
 r("SPEED_CDI1_SAF", DataType.U16, RegisterType.ReadOnly, 1221, undefined, undefined, "SAF speed value for user mode Holiday. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("SPEED_CDI1_EAF", DataType.U16, RegisterType.ReadOnly, 1222, undefined, undefined, "EAF speed value for user mode Holiday. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("SPEED_CDI2_SAF", DataType.U16, RegisterType.ReadOnly, 1223, undefined, undefined, "SAF speed value for mode Cooker Hood. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("SPEED_CDI2_EAF", DataType.U16, RegisterType.ReadOnly, 1224, undefined, undefined, "EAF speed value for mode Cooker Hood. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("SPEED_CDI3_SAF", DataType.U16, RegisterType.ReadOnly, 1225, undefined, undefined, "SAF speed value for mode Vacuum Cleaner. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("SPEED_CDI3_EAF", DataType.U16, RegisterType.ReadOnly, 1226, undefined, undefined, "EAF speed value for mode Vacuum Cleaner. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("SPEED_PRESSURE_GUARD_SAF", DataType.U16, RegisterType.ReadOnly, 1227, undefined, undefined, "SAF speed value for low fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("SPEED_PRESSURE_GUARD_EAF", DataType.U16, RegisterType.ReadOnly, 1228, undefined, undefined, "EAF speed value for low fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("FAN_OUTDOOR_COMP_TYPE", DataType.U16, RegisterType.ReadWrite, 1251, 0, 1, "Compensate only SF or both SF and EF\n0: SAF\n1: SAF/EAF"),
 r("FAN_OUTDOOR_COMP_MAX_VALUE", DataType.U16, RegisterType.ReadWrite, 1252, 0, 50, "Compensation value at lowest temperature."),
 r("FAN_OUTDOOR_COMP_STOP_T_WINTER", DataType.I16, RegisterType.ReadWrite, 1253, -300, 0, "Temperature at which compensation reaches maximum value during the winter period."),
 r("FAN_OUTDOOR_COMP_MAX_TEMP", DataType.I16, RegisterType.ReadWrite, 1254, -300, 0, "Temperature at which highest compensation is applied."),
 r("FAN_OUTDOOR_COMP_START_T_WINTER", DataType.U16, RegisterType.ReadWrite, 1256, -300, 0, "Temperature at which compensation starts during the winter period."),
 r("FAN_OUTDOOR_COMP_START_T_SUMMER", DataType.U16, RegisterType.ReadWrite, 1257, 150, 300, "Temperature at which compensation starts during the summer period."),
 r("FAN_OUTDOOR_COMP_STOP_T_SUMMER", DataType.U16, RegisterType.ReadWrite, 1258, 150, 400, "Temperature at which compensation reaches maximum value during the summer period."),
 r("FAN_OUTDOOR_COMP_VALUE_SUMMER", DataType.U16, RegisterType.ReadWrite, 1259, 0, 50, "Compensation value during summer period"),
 r("FAN_REGULATION_UNIT", DataType.U16, RegisterType.ReadWrite, 1274, 0, 4, "Type of fan control mode.\n0: Manual\n1: RPM\n2: VAV (Constant Pressure)\n3: CAV (Constant Flow)4: DCV (External)"),
 r("FAN_LEVEL_SAF_MIN", DataType.U16, RegisterType.ReadOnly, 1301, undefined, undefined, "SAF speed value for minimum fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("FAN_LEVEL_EAF_MIN", DataType.U16, RegisterType.ReadOnly, 1302, undefined, undefined, "EAF speed value for minimum fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("FAN_LEVEL_SAF_LOW", DataType.U16, RegisterType.ReadOnly, 1303, undefined, undefined, "SAF speed value for low fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("FAN_LEVEL_EAF_LOW", DataType.U16, RegisterType.ReadOnly, 1304, undefined, undefined, "EAF speed value for low fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("FAN_LEVEL_SAF_NORMAL", DataType.U16, RegisterType.ReadOnly, 1305, undefined, undefined, "SAF speed value for normal fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("FAN_LEVEL_EAF_NORMAL", DataType.U16, RegisterType.ReadOnly, 1306, undefined, undefined, "EAF speed value for normal fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("FAN_LEVEL_SAF_HIGH", DataType.U16, RegisterType.ReadOnly, 1307, undefined, undefined, "SAF speed value for high fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("FAN_LEVEL_EAF_HIGH", DataType.U16, RegisterType.ReadOnly, 1308, undefined, undefined, "EAF speed value for high fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("FAN_LEVEL_SAF_MAX", DataType.U16, RegisterType.ReadOnly, 1309, undefined, undefined, "SAF speed value for maximum fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("FAN_LEVEL_EAF_MAX", DataType.U16, RegisterType.ReadOnly, 1310, undefined, undefined, "EAF speed value for maximum fan speed. (1): Depends on regulation type. Value can be %, RPM, Pressure or Flow"),
 r("SPEED_FANS_RUNNING", DataType.U16, RegisterType.ReadOnly, 1351, 0, 1, "Indicates that both fans are running"),
 r("SPEED_SAF_DESIRED_OFF", DataType.U16, RegisterType.ReadOnly, 1352, 0, 1, "Indicates that the SAF shall be turned off once the electrical reheater is cooled down."),
 r("FAN_MANUAL_STOP_ALLOWED", DataType.U16, RegisterType.ReadWrite, 1353, 0, 1, "Allow manual fan stop (also as selection for user modes and Week schedule).\n0: Manual stop not allowed\n1: Manual stop allowed"),
 r("SPEED_ELECTRICAL_HEATER_HOT_COUNTER", DataType.U16, RegisterType.ReadOnly, 1357, undefined, undefined, "Electrical Heater hot counter. Count down from 120 sec."),
 r("FAN_SPEED_AFTER_HEATER_COOLING_DOWN_SAF", DataType.U16, RegisterType.ReadOnly, 1358, 0, 100, "Supply Air Fan Speed Level After Heater Cooling Down"),
 r("FAN_SPEED_AFTER_HEATER_COOLING_DOWN_EAF", DataType.U16, RegisterType.ReadOnly, 1359, 0, 100, "Extract Air Fan Speed Level After Heater Cooling Down"),
 r("FAN_LEVEL_SAF_MIN_PERCENTAGE", DataType.U16, RegisterType.ReadWrite, 1401, 16, 100, "SAF speed value for minimum fan speed"),
 r("FAN_LEVEL_EAF_MIN_PERCENTAGE", DataType.U16, RegisterType.ReadWrite, 1402, 16, 100, "EAF speed value for minimum fan speed"),
 r("FAN_LEVEL_SAF_LOW_PERCENTAGE", DataType.U16, RegisterType.ReadWrite, 1403, 16, 100, "SAF speed value for low fan speed"),
 r("FAN_LEVEL_EAF_LOW_PERCENTAGE", DataType.U16, RegisterType.ReadWrite, 1404, 16, 100, "EAF speed value for low fan speed"),
 r("FAN_LEVEL_SAF_NORMAL_PERCENTAGE", DataType.U16, RegisterType.ReadWrite, 1405, 16, 100, "SAF speed value for normal fan speed"),
 r("FAN_LEVEL_EAF_NORMAL_PERCENTAGE", DataType.U16, RegisterType.ReadWrite, 1406, 16, 100, "EAF speed value for normal fan speed"),
 r("FAN_LEVEL_SAF_HIGH_PERCENTAGE", DataType.U16, RegisterType.ReadWrite, 1407, 16, 100, "SAF speed value for high fan speed"),
 r("FAN_LEVEL_EAF_HIGH_PERCENTAGE", DataType.U16, RegisterType.ReadWrite, 1408, 16, 100, "EAF speed value for high fan speed"),
 r("FAN_LEVEL_SAF_MAX_PERCENTAGE", DataType.U16, RegisterType.ReadWrite, 1409, 16, 100, "SAF speed value for maximum fan speed"),
 r("FAN_LEVEL_EAF_MAX_PERCENTAGE", DataType.U16, RegisterType.ReadWrite, 1410, 16, 100, "EAF speed value for maximum fan speed"),
 r("FAN_LEVEL_SAF_MIN_RPM", DataType.U16, RegisterType.ReadWrite, 1411, 500, 5000, "SAF speed value for minimum fan speed"),
 r("FAN_LEVEL_EAF_MIN_RPM", DataType.U16, RegisterType.ReadWrite, 1412, 500, 5000, "EAF speed value for minimum fan speed"),
 r("FAN_LEVEL_SAF_LOW_RPM", DataType.U16, RegisterType.ReadWrite, 1413, 500, 5000, "SAF speed value for low fan speed"),
 r("FAN_LEVEL_EAF_LOW_RPM", DataType.U16, RegisterType.ReadWrite, 1414, 500, 5000, "EAF speed value for low fan speed"),
 r("FAN_LEVEL_SAF_NORMAL_RPM", DataType.U16, RegisterType.ReadWrite, 1415, 500, 5000, "SAF speed value for normal fan speed"),
 r("FAN_LEVEL_EAF_NORMAL_RPM", DataType.U16, RegisterType.ReadWrite, 1416, 500, 5000, "EAF speed value for normal fan speed"),
 r("FAN_LEVEL_SAF_HIGH_RPM", DataType.U16, RegisterType.ReadWrite, 1417, 500, 5000, "SAF speed value for high fan speed"),
 r("FAN_LEVEL_EAF_HIGH_RPM", DataType.U16, RegisterType.ReadWrite, 1418, 500, 5000, "EAF speed value for high fan speed"),
 r("FAN_LEVEL_SAF_MAX_RPM", DataType.U16, RegisterType.ReadWrite, 1419, 500, 5000, "SAF speed value for maximum fan speed"),
 r("FAN_LEVEL_EAF_MAX_RPM", DataType.U16, RegisterType.ReadWrite, 1420, 500, 5000, "EAF speed value for maximum fan speed"),
 r("FAN_LEVEL_SAF_MIN_PRESSURE", DataType.U16, RegisterType.ReadWrite, 1421, undefined, undefined, "SAF speed value for minimum fan speed"),
 r("FAN_LEVEL_EAF_MIN_PRESSURE", DataType.U16, RegisterType.ReadWrite, 1422, undefined, undefined, "EAF speed value for minimum fan speed"),
 r("FAN_LEVEL_SAF_LOW_PRESSURE", DataType.U16, RegisterType.ReadWrite, 1423, undefined, undefined, "SAF speed value for low fan speed"),
 r("FAN_LEVEL_EAF_LOW_PRESSURE", DataType.U16, RegisterType.ReadWrite, 1424, undefined, undefined, "EAF speed value for low fan speed"),
 r("FAN_LEVEL_SAF_NORMAL_PRESSURE", DataType.U16, RegisterType.ReadWrite, 1425, undefined, undefined, "SAF speed value for normal fan speed"),
 r("FAN_LEVEL_EAF_NORMAL_PRESSURE", DataType.U16, RegisterType.ReadWrite, 1426, undefined, undefined, "EAF speed value for normal fan speed"),
 r("FAN_LEVEL_SAF_HIGH_PRESSURE", DataType.U16, RegisterType.ReadWrite, 1427, undefined, undefined, "SAF speed value for high fan speed"),
 r("FAN_LEVEL_EAF_HIGH_PRESSURE", DataType.U16, RegisterType.ReadWrite, 1428, undefined, undefined, "EAF speed value for high fan speed"),
 r("FAN_LEVEL_SAF_MAX_PRESSURE", DataType.U16, RegisterType.ReadWrite, 1429, undefined, undefined, "SAF speed value for maximum fan speed"),
 r("FAN_LEVEL_EAF_MAX_PRESSURE", DataType.U16, RegisterType.ReadWrite, 1430, undefined, undefined, "EAF speed value for maximum fan speed"),
 r("FAN_LEVEL_SAF_MIN_FLOW", DataType.U16, RegisterType.ReadWrite, 1431, undefined, undefined, "SAF speed value for minimum fan speed"),
 r("FAN_LEVEL_EAF_MIN_FLOW", DataType.U16, RegisterType.ReadWrite, 1432, undefined, undefined, "EAF speed value for minimum fan speed"),
 r("FAN_LEVEL_SAF_LOW_FLOW", DataType.U16, RegisterType.ReadWrite, 1433, undefined, undefined, "SAF speed value for low fan speed"),
 r("FAN_LEVEL_EAF_LOW_FLOW", DataType.U16, RegisterType.ReadWrite, 1434, undefined, undefined, "EAF speed value for low fan speed"),
 r("FAN_LEVEL_SAF_NORMAL_FLOW", DataType.U16, RegisterType.ReadWrite, 1435, undefined, undefined, "SAF speed value for normal fan speed"),
 r("FAN_LEVEL_EAF_NORMAL_FLOW", DataType.U16, RegisterType.ReadWrite, 1436, undefined, undefined, "EAF speed value for normal fan speed"),
 r("FAN_LEVEL_SAF_HIGH_FLOW", DataType.U16, RegisterType.ReadWrite, 1437, undefined, undefined, "SAF speed value for high fan speed"),
 r("FAN_LEVEL_EAF_HIGH_FLOW", DataType.U16, RegisterType.ReadWrite, 1438, undefined, undefined, "EAF speed value for high fan speed"),
 r("FAN_LEVEL_SAF_MAX_FLOW", DataType.U16, RegisterType.ReadWrite, 1439, undefined, undefined, "SAF speed value for maximum fan speed"),
 r("FAN_LEVEL_EAF_MAX_FLOW", DataType.U16, RegisterType.ReadWrite, 1440, undefined, undefined, "EAF speed value for maximum fan speed"),
 r("USERMODE_REMAINING_TIME_CDI1_L", DataType.U16, RegisterType.ReadOnly, 1621, undefined, undefined, "Remaining time"),
 r("USERMODE_REMAINING_TIME_CDI1_H", DataType.U16, RegisterType.ReadOnly, 1622, undefined, undefined, ""),
 r("USERMODE_REMAINING_TIME_CDI2_L", DataType.U16, RegisterType.ReadOnly, 1623, undefined, undefined, "Remaining time"),
 r("USERMODE_REMAINING_TIME_CDI2_H", DataType.U16, RegisterType.ReadOnly, 1624, undefined, undefined, ""),
 r("USERMODE_REMAINING_TIME_CDI3_L", DataType.U16, RegisterType.ReadOnly, 1625, undefined, undefined, "Remaining time"),
 r("USERMODE_REMAINING_TIME_CDI3_H", DataType.U16, RegisterType.ReadOnly, 1626, undefined, undefined, ""),
 r("TC_SP", DataType.I16, RegisterType.ReadWrite, 2001, 120, 300, "Temperature setpoint for the supply airtemperature"),
 r("TC_CASCADE_SP", DataType.I16, RegisterType.ReadWrite, 2013, 120, 400, "Temperature set point for SATC, as calculated by RATC/EATC during cascade control"),
 r("TC_CASCADE_SP_MIN", DataType.I16, RegisterType.ReadWrite, 2021, 120, 400, "Minimum temperature set point for the SATC"),
 r("TC_CASCADE_SP_MAX", DataType.I16, RegisterType.ReadWrite, 2022, 120, 400, "Maximum temperature set point for the SATC"),
 r("TC_CONTROL_MODE", DataType.U16, RegisterType.ReadWrite, 2031, 0, 2, "Unit temperature control mode\n0: Supply\n1: Room\n2: Extract"),
 r("TC_EAT_RAT_SP", DataType.I16, RegisterType.ReadOnly, 2051, 120, 400, "EAT or RAT value, used for room/extract air controller."),
 r("TC_ROOM_CTRL_SP_SATC", DataType.I16, RegisterType.ReadOnly, 2053, 120, 400, "Temperature set point for SATC, as calculated by RATC/EATC during cascade control"),
 r("TC_SP_SATC", DataType.I16, RegisterType.ReadOnly, 2054, 120, 300, "Temperature setpoint for the supply airtemperature"),
 r("SATC_HEAT_DEMAND", DataType.U16, RegisterType.ReadOnly, 2055, 0, 100, "Output of the SATC (0-100%)"),
 r("SATC_PI_SP", DataType.I16, RegisterType.ReadOnly, 2061, 120, 300, "SATC setpoint value"),
 r("SATC_PI_OUTPUT", DataType.I16, RegisterType.ReadOnly, 2069, 0, 100, "SATC output signal"),
 r("ROOM_CTRL_PI_SP", DataType.I16, RegisterType.ReadOnly, 2071, 120, 300, "RATC setpoint value"),
 r("ROOM_CTRL_PI_OUTPUT", DataType.I16, RegisterType.ReadOnly, 2079, 0, 100, "RATC output signal"),
 r("INPUT_EXTERNAL_CTRL_SAF", DataType.U16, RegisterType.ReadOnly, 2101, 0, 100, "Value from External Controller Input, SAF. In %."),
 r("INPUT_EXTERNAL_CTRL_EAF", DataType.U16, RegisterType.ReadOnly, 2102, 0, 100, "Value from External Controller Input, EAF. In %."),
 r("HEATER_CIRC_PUMP_START_T", DataType.I16, RegisterType.ReadWrite, 2113, 0, 200, "Temperature at which the Heater circulation pump is started"),
 r("HEATER_CIRC_PUMP_STOP_DELAY", DataType.U16, RegisterType.ReadWrite, 2122, 0, 60, "Off time delay for the heater circulation pump in minutes"),
 r("HEAT_EXCHANGER_COOLING_RECOVERY_ON_OFF", DataType.U16, RegisterType.ReadWrite, 2134, 0, 1, "Enabling of cooling recovery"),
 r("HEAT_EXCHANGER_RH_TRANSFER_CTRL_ENABLED", DataType.U16, RegisterType.ReadOnly, 2147, undefined, undefined, "Indicates if RH trasnfer control shall beapplied"),
 r("PWM_TRIAC_OUTPUT", DataType.U16, RegisterType.ReadOnly, 2149, 0, 100, "TRIAC after manual override"),
 r("ROTOR_RH_TRANSFER_CTRL_PBAND", DataType.U16, RegisterType.ReadWrite, 2201, 0, 40, "Pband setting for RH transfer control"),
 r("ROTOR_RH_TRANSFER_CTRL_ITIME", DataType.U16, RegisterType.ReadWrite, 2202, 120, 0, "Itime setting for RH transfer control"),
 r("ROTOR_RH_TRANSFER_CTRL_SETPOINT", DataType.U16, RegisterType.ReadWrite, 2203, 100, 45, "Set point setting for RH transfer control"),
 r("ROTOR_RH_TRANSFER_CTRL_ON_OFF", DataType.U16, RegisterType.ReadWrite, 2204, 1, 1, "Enabling of humidity transfer control"),
 r("ROTOR_EA_SPEC_HUMIDITY", DataType.U16, RegisterType.ReadOnly, 2211, undefined, undefined, "Extract air specific humidity (g/kg)"),
 r("ROTOR_OA_SPEC_HUMIDITY", DataType.U16, RegisterType.ReadOnly, 2212, undefined, undefined, "Outdoor air specific humidity at assumed 90% RH outdoors"),
 r("ROTOR_EA_SPEC_HUMIDITY_SETPOINT", DataType.U16, RegisterType.ReadOnly, 2213, undefined, undefined, "Moisture transfer control specific humidity setpoint"),
 r("COOLER_FROM_SATC", DataType.U16, RegisterType.ReadOnly, 2311, 0, 100, "Cooler signal"),
 r("COOLER_CIRC_PUMP_START_T", DataType.U16, RegisterType.ReadWrite, 2314, 0, 200, "Temperature at which the cooler circulation pump is started"),
 r("COOLER_RECOVERY_LIMIT_T", DataType.U16, RegisterType.ReadWrite, 2315, 0, 100, "Temperature at which cooling recovery is allowed"),
 r("COOLER_OAT_INTERLOCK_T", DataType.U16, RegisterType.ReadWrite, 2316, 120, 250, "Temperature at which cooling is interlocked"),
 r("COOLER_CIRC_PUMP_STOP_DELAY", DataType.U16, RegisterType.ReadWrite, 2317, 0, 60, "Off time delay for the cooler circulation pump in minutes"),
 r("EXTRA_CONTROLLER_SET_PI_SETPOINT", DataType.I16, RegisterType.ReadWrite, 2403, -300, 400, "Set point value for the extra controller PI regulator"),
 r("EXTRA_CONTROLLER_CIRC_PUMP_START_T", DataType.I16, RegisterType.ReadWrite, 2404, 0, 200, "Start temperature for extra controller circulation pump"),
 r("EXTRA_CONTROLLER_CIRC_PUMP_STOP_DELAY", DataType.U16, RegisterType.ReadWrite, 2405, 0, 60, "Off time delay for the extra controller circulation pump in minutes"),
 r("EXTRA_CONTROLLER_PREHEATER_SETPOINT_TYPE", DataType.U16, RegisterType.ReadWrite, 2418, 0, 1, "Temperature setpoint for the preheater.\n0: Auto\n1: Manual"),
 r("EXTRA_CONTROLLER_GEO_PREHEATER_SP", DataType.I16, RegisterType.ReadWrite, 2420, -300, 100, ""),
 r("EXTRA_CONTROLLER_GEO_PREHEATER_ACTIVATION_T", DataType.I16, RegisterType.ReadWrite, 2421, -300, 0, ""),
 r("EXTRA_CONTROLLER_GEO_PRECOOLER_SP", DataType.I16, RegisterType.ReadWrite, 2422, 100, 300, ""),
 r("EXTRA_CONTROLLER_GEO_PRECOOLER_ACTIVATION_T", DataType.I16, RegisterType.ReadWrite, 2423, 150, 300, ""),
 r("CHANGE_OVER_CIRC_PUMP_START_T", DataType.I16, RegisterType.ReadWrite, 2451, 0, 200, "Start temperature for the change-over circulation pump"),
 r("CHANGE_OVER_CIRC_PUMP_STOP_DELAY", DataType.U16, RegisterType.ReadWrite, 2452, 0, 60, "Off time delay for the change-over circulation pump in minutes"),
 r("ECO_T_Y1_OFFSET", DataType.I16, RegisterType.ReadWrite, 2504, 0, 100, "Temperature offset for heating during Eco mode"),
 r("ECO_MODE_ON_OFF", DataType.U16, RegisterType.ReadWrite, 2505, 0, 1, "Enabling of eco mode"),
 r("ECO_FUNCTION_ACTIVE", DataType.U16, RegisterType.ReadOnly, 2506, 0, 1, "Indicates if conditions for ECO mode are"),
 r("FUNCTION_ACTIVE_COOLING", DataType.U16, RegisterType.ReadOnly, 3101, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_FREE_COOLING", DataType.U16, RegisterType.ReadOnly, 3102, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_HEATING", DataType.U16, RegisterType.ReadOnly, 3103, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_DEFROSTING", DataType.U16, RegisterType.ReadOnly, 3104, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_HEAT_RECOVERY", DataType.U16, RegisterType.ReadOnly, 3105, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_COOLING_RECOVERY", DataType.U16, RegisterType.ReadOnly, 3106, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_MOISTURE_TRANSFER", DataType.U16, RegisterType.ReadOnly, 3107, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_SECONDARY_AIR", DataType.U16, RegisterType.ReadOnly, 3108, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_VACUUM_CLEANER", DataType.U16, RegisterType.ReadOnly, 3109, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_COOKER_HOOD", DataType.U16, RegisterType.ReadOnly, 3110, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_USER_LOCK", DataType.U16, RegisterType.ReadOnly, 3111, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_ECO_MODE", DataType.U16, RegisterType.ReadOnly, 3112, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_HEATER_COOL_DOWN", DataType.U16, RegisterType.ReadOnly, 3113, 0, 1, "Active Heater Cool Down"),
 r("FUNCTION_ACTIVE_HEATER_COOL_DOWN", DataType.U16, RegisterType.ReadOnly, 3113, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_PRESSURE_GUARD", DataType.U16, RegisterType.ReadOnly, 3114, 0, 1, "Indicates if function is active"),
 r("FUNCTION_ACTIVE_PRESSURE_GUARD", DataType.U16, RegisterType.ReadOnly, 3114, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_CDI_1", DataType.U16, RegisterType.ReadOnly, 3115, 0, 1, "Indicates if function is active"),
 r("FUNCTION_ACTIVE_CDI_1", DataType.U16, RegisterType.ReadOnly, 3115, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_CDI_2", DataType.U16, RegisterType.ReadOnly, 3116, 0, 1, "Indicates if function is active"),
 r("FUNCTION_ACTIVE_CDI_2", DataType.U16, RegisterType.ReadOnly, 3116, undefined, undefined, "Is the function currently active?"),
 r("FUNCTION_ACTIVE_CDI_3", DataType.U16, RegisterType.ReadOnly, 3117, 0, 1, "Indicates if function is active"),
 r("FUNCTION_ACTIVE_CDI_3", DataType.U16, RegisterType.ReadOnly, 3117, undefined, undefined, "Is the function currently active?"),
 r("FREE_COOLING_ON_OFF", DataType.U16, RegisterType.ReadWrite, 4101, undefined, 1, "Indicates if free cooling is enabled"),
 r("FREE_COOLING_ON_OFF", DataType.U16, RegisterType.ReadWrite, 4101, undefined, 1, "Indicates if free cooling is enabled"),
 r("FREE_COOLING_OUTDOOR_DAYTIME_T", DataType.I16, RegisterType.ReadWrite, 4102, 120, 300, "Minimum of highest daytime temperature for start of free cooling."),
 r("FREE_COOLING_OUTDOOR_NIGHTTIME_DEACTIVATION_HIGH_T_LIMIT", DataType.I16, RegisterType.ReadWrite, 4103, 70, 300, "Highest night temperature limit for termination free cooling"),
 r("FREE_COOLING_OUTDOOR_NIGHTTIME_DEACTIVATION_LOW_T_LIMIT", DataType.I16, RegisterType.ReadWrite, 4104, 70, 300, "Lowest night temperature limit for termination free cooling"),
 r("FREE_COOLING_ROOM_CANCEL_T", DataType.I16, RegisterType.ReadWrite, 4105, 120, 300, "Lowest temperature room temperature for termination of free cooling"),
 r("FREE_COOLING_START_TIME_H", DataType.U16, RegisterType.ReadWrite, 4106, undefined, undefined, "Start time of free cooling night-period, hour. Valid range is from 0 to 8 and from 21 to 23."),
 r("FREE_COOLING_START_TIME_M", DataType.U16, RegisterType.ReadWrite, 4107, 0, 59, "Start time of free cooling night-period, Minute"),
 r("FREE_COOLING_END_TIME_H", DataType.U16, RegisterType.ReadWrite, 4108, undefined, undefined, "End time of free cooling night-period, hour. Valid range is from 0 to 8 and from 21 to 23."),
 r("FREE_COOLING_END_TIME_M", DataType.U16, RegisterType.ReadWrite, 4109, 0, 59, "End time of free cooling night-period, Minute"),
 r("FREE_COOLING_ACTIVE", DataType.U16, RegisterType.ReadOnly, 4111, 0, 1, "Indicates if free cooling is being performed"),
 r("FREE_COOLING_MIN_SPEED_LEVEL_SAF", DataType.U16, RegisterType.ReadWrite, 4112, 3, 5, "Minimum speed level during free cooling, SAF.\n3: Normal\n4: High\n5: Maximum"),
 r("FREE_COOLING_MIN_SPEED_LEVEL_EAF", DataType.U16, RegisterType.ReadWrite, 4113, 3, 5, "Minimum speed level during free cooling, EAF.\n3: Normal\n4: High\n5: Maximum"),
 r("WS_T_OFFSET_ACTIVE", DataType.I16, RegisterType.ReadWrite, 5001, -100, 0, "Temperature offset during active week schedule."),
 r("WS_T_OFFSET_INACTIVE", DataType.I16, RegisterType.ReadWrite, 5002, -100, 0, "Temperature offset during inactive week schedule."),
 r("WS_DAY1_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5003, 0, 23, "Monday, Period 1, start"),
 r("WS_DAY1_PRD1_START_M", DataType.U16, RegisterType.ReadWrite, 5004, 0, 59, ""),
 r("WS_DAY1_PRD1_END_H", DataType.U16, RegisterType.ReadWrite, 5005, 0, 23, "Monday, Period 1, end"),
 r("WS_DAY1_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5006, 0, 59, ""),
 r("WS_DAY1_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5007, 0, 23, "Monday, Period 2, start"),
 r("WS_DAY1_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5008, 0, 59, ""),
 r("WS_DAY1_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5009, 0, 23, "Monday, Period 2, end"),
 r("WS_DAY1_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5010, 0, 59, ""),
 r("WS_DAY2_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5011, 0, 23, "Tuesday, Period 1, start"),
 r("WS_DAY2_PRD1_START_M", DataType.U16, RegisterType.ReadWrite, 5012, 0, 59, ""),
 r("WS_DAY2_PRD1_END_H", DataType.U16, RegisterType.ReadWrite, 5013, 0, 23, "Tuesday, Period 1, end"),
 r("WS_DAY2_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5014, 0, 59, ""),
 r("WS_DAY2_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5015, 0, 23, "Tuesday, Period 2, start"),
 r("WS_DAY2_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5016, 0, 59, ""),
 r("WS_DAY2_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5017, 0, 23, "Tuesday, Period 2, end"),
 r("WS_DAY2_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5018, 0, 59, ""),
 r("WS_DAY3_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5019, 0, 23, "Wednesday, Period 1, start"),
 r("WS_DAY3_PRD1_START_M", DataType.U16, RegisterType.ReadWrite, 5020, 0, 59, ""),
 r("WS_DAY3_PRD1_END_H", DataType.U16, RegisterType.ReadWrite, 5021, 0, 23, "Wednesday, Period 1, end"),
 r("WS_DAY3_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5022, 0, 59, ""),
 r("WS_DAY3_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5022, 0, 59, ""),
 r("WS_DAY3_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5023, 0, 23, "Wednesday, Period 2, start"),
 r("WS_DAY3_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5023, 0, 23, "Wednesday, Period 2, start"),
 r("WS_DAY3_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5024, 0, 59, ""),
 r("WS_DAY3_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5024, 0, 59, ""),
 r("WS_DAY3_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5025, 0, 23, "Wednesday, Period 2, end"),
 r("WS_DAY3_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5025, 0, 23, "Wednesday, Period 2, end"),
 r("WS_DAY3_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5026, 0, 59, ""),
 r("WS_DAY3_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5026, 0, 59, ""),
 r("WS_DAY4_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5027, 0, 23, "Thursday, Period 1, start"),
 r("WS_DAY4_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5027, 0, 23, "Thursday, Period 1, start"),
 r("WS_DAY4_PRD1_START_M", DataType.U16, RegisterType.ReadWrite, 5028, 0, 59, ""),
 r("WS_DAY4_PRD1_START_M", DataType.U16, RegisterType.ReadWrite, 5028, 0, 59, ""),
 r("WS_DAY4_PRD1_END_H", DataType.U16, RegisterType.ReadWrite, 5029, 0, 23, "Thursday, Period 1, end"),
 r("WS_DAY4_PRD1_END_H", DataType.U16, RegisterType.ReadWrite, 5029, 0, 23, "Thursday, Period 1, end"),
 r("WS_DAY4_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5030, 0, 59, ""),
 r("WS_DAY4_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5030, 0, 59, ""),
 r("WS_DAY4_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5031, 0, 23, "Thursday, Period 2, start"),
 r("WS_DAY4_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5031, 0, 23, "Thursday, Period 2, start"),
 r("WS_DAY4_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5032, 0, 59, ""),
 r("WS_DAY4_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5032, 0, 59, ""),
 r("WS_DAY4_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5033, 0, 23, "Thursday, Period 2, end"),
 r("WS_DAY4_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5033, 0, 23, "Thursday, Period 2, end"),
 r("WS_DAY4_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5034, 0, 59, ""),
 r("WS_DAY4_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5034, 0, 59, ""),
 r("WS_DAY5_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5035, 0, 23, "Friday, Period 1, start"),
 r("WS_DAY5_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5035, 0, 23, "Friday, Period 1, start"),
 r("WS_DAY5_PRD1_START_M", DataType.U16, RegisterType.ReadWrite, 5036, 0, 59, ""),
 r("WS_DAY5_PRD1_START_M", DataType.U16, RegisterType.ReadWrite, 5036, 0, 59, ""),
 r("WS_DAY5_PRD1_END_H", DataType.U16, RegisterType.ReadWrite, 5037, 0, 23, "Friday, Period 1, end"),
 r("WS_DAY5_PRD1_END_H", DataType.U16, RegisterType.ReadWrite, 5037, 0, 23, "Friday, Period 1, end"),
 r("WS_DAY5_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5038, 0, 59, ""),
 r("WS_DAY5_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5038, 0, 59, ""),
 r("WS_DAY5_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5039, 0, 23, "Friday, Period 2, start"),
 r("WS_DAY5_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5039, 0, 23, "Friday, Period 2, start"),
 r("WS_DAY5_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5040, 0, 59, ""),
 r("WS_DAY5_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5040, 0, 59, ""),
 r("WS_DAY5_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5041, 0, 23, "Friday, Period 2, end"),
 r("WS_DAY5_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5041, 0, 23, "Friday, Period 2, end"),
 r("WS_DAY5_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5042, 0, 59, ""),
 r("WS_DAY5_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5042, 0, 59, ""),
 r("WS_DAY6_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5043, 0, 23, "Saturday, Period 1, start"),
 r("WS_DAY6_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5043, 0, 23, "Saturday, Period 1, start"),
 r("WS_DAY6_PRD1_START_M", DataType.U16, RegisterType.ReadWrite, 5044, 0, 59, ""),
 r("WS_DAY6_PRD1_START_M", DataType.U16, RegisterType.ReadWrite, 5044, 0, 59, ""),
 r("WS_DAY6_PRD1_END_H", DataType.U16, RegisterType.ReadWrite, 5045, 0, 23, "Saturday, Period 1, end"),
 r("WS_DAY6_PRD1_END_H", DataType.U16, RegisterType.ReadWrite, 5045, 0, 23, "Saturday, Period 1, end"),
 r("WS_DAY6_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5046, 0, 59, ""),
 r("WS_DAY6_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5046, 0, 59, ""),
 r("WS_DAY6_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5047, 0, 23, "Saturday, Period 2, start"),
 r("WS_DAY6_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5047, 0, 23, "Saturday, Period 2, start"),
 r("WS_DAY6_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5048, 0, 59, ""),
 r("WS_DAY6_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5048, 0, 59, ""),
 r("WS_DAY6_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5049, 0, 23, "Saturday, Period 2, end"),
 r("WS_DAY6_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5049, 0, 23, "Saturday, Period 2, end"),
 r("WS_DAY6_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5050, 0, 59, ""),
 r("WS_DAY6_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5050, 0, 59, ""),
 r("WS_DAY7_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5051, 0, 23, "Sunday, Period 1, start"),
 r("WS_DAY7_PRD1_START_H", DataType.U16, RegisterType.ReadWrite, 5051, 0, 23, "Sunday, Period 1, start"),
 r("WS_DAY7_PRD1_START_M", DataType.U16, RegisterType.ReadWrite, 5052, 0, 59, ""),
 r("WS_DAY7_PRD1_END_H", DataType.U16, RegisterType.ReadWrite, 5053, 0, 23, "Sunday, Period 1, end"),
 r("WS_DAY7_PRD1_END_M", DataType.U16, RegisterType.ReadWrite, 5054, 0, 59, ""),
 r("WS_DAY7_PRD2_START_H", DataType.U16, RegisterType.ReadWrite, 5055, 0, 23, "Sunday, Period 2, start"),
 r("WS_DAY7_PRD2_START_M", DataType.U16, RegisterType.ReadWrite, 5056, 0, 59, ""),
 r("WS_DAY7_PRD2_END_H", DataType.U16, RegisterType.ReadWrite, 5057, 0, 23, "Sunday, Period 2, end"),
 r("WS_DAY7_PRD2_END_M", DataType.U16, RegisterType.ReadWrite, 5058, 0, 59, ""),
 r("WS_ACTIVE", DataType.U16, RegisterType.ReadOnly, 5059, 0, 1, "Indicates that the current time lays within the indicated intervals"),
 r("WS_FAN_LEVEL_SCHEDULED", DataType.U16, RegisterType.ReadWrite, 5060, 1, 5, "Fan speed levels for SAF and EAF during active week schedule.\n1: Off(1)\n2: Low\n3: Normal\n4: High\n5: Demand(2)\n(1): Off available if Manual Fan Stop is enabled.\n(2): Demand available if demand control active or external fan control enabled."),
 r("WS_FAN_LEVEL_UNSCHEDULED", DataType.U16, RegisterType.ReadWrite, 5061, 1, 5, "Fan speed levels for SAF and EAF during inactive week schedule.\n1: Off(1)\n2: Low\n3: Normal\n4: High\n5: Demand(2)\n(1): Off available if Manual Fan Stop is enabled.\n(2): Demand available if demand control active or external fan control enabled."),
 r("WS_DAY1_PRD1_ENABLED", DataType.U16, RegisterType.ReadWrite, 5101, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY1_PRD2_ENABLED", DataType.U16, RegisterType.ReadWrite, 5102, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY2_PRD1_ENABLED", DataType.U16, RegisterType.ReadWrite, 5103, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY2_PRD2_ENABLED", DataType.U16, RegisterType.ReadWrite, 5104, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY3_PRD1_ENABLED", DataType.U16, RegisterType.ReadWrite, 5105, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY3_PRD2_ENABLED", DataType.U16, RegisterType.ReadWrite, 5106, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY4_PRD1_ENABLED", DataType.U16, RegisterType.ReadWrite, 5107, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY4_PRD2_ENABLED", DataType.U16, RegisterType.ReadWrite, 5108, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY5_PRD1_ENABLED", DataType.U16, RegisterType.ReadWrite, 5109, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY5_PRD2_ENABLED", DataType.U16, RegisterType.ReadWrite, 5110, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY6_PRD1_ENABLED", DataType.U16, RegisterType.ReadWrite, 5111, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY6_PRD2_ENABLED", DataType.U16, RegisterType.ReadWrite, 5112, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY7_PRD1_ENABLED", DataType.U16, RegisterType.ReadWrite, 5113, 0, 1, "Flag indicating if this period is enabled."),
 r("WS_DAY7_PRD2_ENABLED", DataType.U16, RegisterType.ReadWrite, 5114, 0, 1, "Flag indicating if this period is enabled."),
 r("TIME_YEAR", DataType.U16, RegisterType.ReadWrite, 6001, 0, 2999, "Current time"),
 r("TIME_MONTH", DataType.U16, RegisterType.ReadWrite, 6002, 1, 12, "Current time"),
 r("TIME_DAY", DataType.U16, RegisterType.ReadWrite, 6003, 1, 31, "Current time"),
 r("TIME_HOUR", DataType.U16, RegisterType.ReadWrite, 6004, 0, 23, "Current time"),
 r("TIME_MINUTE", DataType.U16, RegisterType.ReadWrite, 6005, 0, 59, "Current time"),
 r("TIME_SECOND", DataType.U16, RegisterType.ReadWrite, 6006, 0, 59, "Current time"),
 r("TIME_AUTO_SUM_WIN", DataType.U16, RegisterType.ReadWrite, 6007, 0, 1, "Flag indicating if DST is enabled.\n0: Daylight saving time not enabled\n1: Daylight saving time enabled"),
 r("HOUR_FORMAT", DataType.U16, RegisterType.ReadWrite, 6008, 0, 1, "Indicaties the presentation of time in the HMI. 24H/12H"),
 r("DAY_OF_THE_WEEK", DataType.U16, RegisterType.ReadOnly, 6009, 0, 6, "Monday (0)...Sunday (6)"),
 r("DST_PERIOD_ACTIVE", DataType.U16, RegisterType.ReadOnly, 6010, 0, 1, ""),
 r("TIME_RTC_SECONDS_L", DataType.U16, RegisterType.ReadOnly, 6011, undefined, undefined, "Now time in seconds. Lower 16 bits."),
 r("TIME_RTC_SECONDS_H", DataType.U16, RegisterType.ReadOnly, 6012, undefined, undefined, "Now time in seconds. Higher 16 bits."),
 r("SYSTEM_START_UP_TIME_L", DataType.U16, RegisterType.ReadOnly, 6021, undefined, undefined, ""),
 r("SYSTEM_START_UP_TIME_H", DataType.U16, RegisterType.ReadOnly, 6022, undefined, undefined, ""),
 r("TIME_RTC", DataType.U16, RegisterType.ReadOnly, 6101, undefined, undefined, "RTC value in seconds, highest 16 bits"),
 r("FILTER_PERIOD", DataType.U16, RegisterType.ReadWrite, 7001, 3, 15, "Filter replacement time in months"),
 r("FILTER_REPLACEMENT_TIME_L", DataType.U16, RegisterType.ReadWrite, 7002, undefined, undefined, "Timestamp of latest filter replcement, lower 16 bits"),
 r("FILTER_REPLACEMENT_TIME_H", DataType.U16, RegisterType.ReadWrite, 7003, undefined, undefined, "Timestamp of latest filter replcement, higher 16 bits"),
 r("FILTER_PERIOD_SET", DataType.U16, RegisterType.ReadOnly, 7004, undefined, undefined, "Indicates that the LastFilterReplacementTime shall be set Now."),
 r("FILTER_REMAINING_TIME_L", DataType.U16, RegisterType.ReadOnly, 7005, undefined, undefined, "Remaining filter time in seconds, lower 16 bits."),
 r("FILTER_REMAINING_TIME_H", DataType.U16, RegisterType.ReadOnly, 7006, undefined, undefined, "Remaining filter time in seconds, higher 16 bits."),
 r("FILTER_ALARM_WAS_DETECTED", DataType.U16, RegisterType.ReadOnly, 7007, undefined, undefined, "Indicates if the filter warning alarm wasgenerated."),
 r("SYSTEM_UNIT_FLOW", DataType.U16, RegisterType.ReadWrite, 9001, 0, 2, "Unit for CAV control mode.\n0: l/s 1: m3/h2:cfm"),
 r("SYSTEM_UNIT_PRESSURE", DataType.U16, RegisterType.ReadWrite, 9002, 0, 1, "Units for VAV control mode.\n0: Pa 1: InH2O"),
 r("SYSTEM_UNIT_TEMPERATURE", DataType.U16, RegisterType.ReadWrite, 9003, 0, 1, "Units for temperature.\n0: Celcius\n1: Fahrenheit"),
 r("DI_CONNECTION_1", DataType.U16, RegisterType.ReadWrite, 11401, 0, 18, "Indicates what kind of DI functionality is connected to DI1.\n0: None /Away/BYP/Vacuum Cleaner/Cooker Hood/Crowded/EMT/External Stop/Extra Controller Alarm/Fireplace/Holiday/Refresh/RGS/Change Over Feedback/ 14: Fire Alarm/Configurable DI1/Configurable DI2/Configurable DI3/ 18: Pressure Guard"),
 r("DI_CONNECTION_2", DataType.U16, RegisterType.ReadWrite, 11402, 0, 18, "Indicates what kind of DI functionality is connected to DI1.\n0: None /Away/BYP/Vacuum Cleaner/Cooker Hood/Crowded/EMT/External Stop/Extra Controller Alarm/Fireplace/Holiday/Refresh/RGS/Change Over Feedback/ 14: Fire Alarm/Configurable DI1/Configurable DI2/Configurable DI3/ 18: Pressure Guard"),
 r("DI_CFG_POLARITY_1", DataType.U16, RegisterType.ReadWrite, 11421, 0, 1, "Polarity of DI1.\n0: NO\n1: NC"),
 r("DI_CFG_POLARITY_2", DataType.U16, RegisterType.ReadWrite, 11422, 0, 1, "Polarity of DI1.\n0: NO\n1: NC"),
 r("INPUT_ANALOG_UI_1", DataType.U16, RegisterType.ReadWrite, 12011, undefined, undefined, "mV"),
 r("INPUT_ANALOG_UI_2", DataType.U16, RegisterType.ReadWrite, 12012, undefined, undefined, "mV"),
 r("INPUT_ANALOG_UI_3", DataType.U16, RegisterType.ReadWrite, 12013, undefined, undefined, "mV"),
 r("INPUT_ANALOG_UI_4", DataType.U16, RegisterType.ReadWrite, 12014, undefined, undefined, "mV"),
 r("INPUT_ANALOG_UI_5", DataType.U16, RegisterType.ReadWrite, 12015, undefined, undefined, "mV"),
 r("INPUT_ANALOG_UI_6", DataType.U16, RegisterType.ReadOnly, 12016, undefined, undefined, "mV"),
 r("INPUT_ANALOG_UI_6", DataType.U16, RegisterType.ReadOnly, 12016, undefined, undefined, "mV"),
 r("INPUT_DIGITAL_UI_1", DataType.U16, RegisterType.ReadWrite, 12021, 0, 1, "State of UI1"),
 r("INPUT_DIGITAL_UI_1", DataType.U16, RegisterType.ReadWrite, 12021, 0, 1, "State of UI1"),
 r("INPUT_DIGITAL_UI_2", DataType.U16, RegisterType.ReadWrite, 12022, 0, 1, "State of UI2"),
 r("INPUT_DIGITAL_UI_2", DataType.U16, RegisterType.ReadWrite, 12022, 0, 1, "State of UI2"),
 r("INPUT_DIGITAL_UI_3", DataType.U16, RegisterType.ReadWrite, 12023, 0, 1, "State of UI3"),
 r("INPUT_DIGITAL_UI_3", DataType.U16, RegisterType.ReadWrite, 12023, 0, 1, "State of UI3"),
 r("INPUT_DIGITAL_UI_4", DataType.U16, RegisterType.ReadWrite, 12024, 0, 1, "State of UI4"),
 r("INPUT_DIGITAL_UI_4", DataType.U16, RegisterType.ReadWrite, 12024, 0, 1, "State of UI4"),
 r("INPUT_DIGITAL_UI_5", DataType.U16, RegisterType.ReadWrite, 12025, 0, 1, "State of UI5"),
 r("INPUT_DIGITAL_UI_5", DataType.U16, RegisterType.ReadWrite, 12025, 0, 1, "State of UI5"),
 r("INPUT_DIGITAL_UI_6", DataType.U16, RegisterType.ReadOnly, 12026, undefined, undefined, "State of UI6"),
 r("INPUT_DIGITAL_UI_6", DataType.U16, RegisterType.ReadOnly, 12026, undefined, undefined, "State of UI6"),
 r("INPUT_DIGITAL_DI_1", DataType.U16, RegisterType.ReadOnly, 12031, 0, 1, "Boolean"),
 r("INPUT_DIGITAL_DI_2", DataType.U16, RegisterType.ReadOnly, 12032, 0, 1, "Boolean"),
 r("SENSOR_FPT", DataType.I16, RegisterType.ReadWrite, 12101, -400, 800, "Frost Protection Temperature sensor value (Water Heater)"),
 r("SENSOR_OAT", DataType.I16, RegisterType.ReadWrite, 12102, -400, 800, "Outdoor Air Temperature sensor (standard)"),
 r("SENSOR_SAT", DataType.I16, RegisterType.ReadWrite, 12103, -400, 800, "Supply Air Temperature sensor (standard)"),
 r("SENSOR_RAT", DataType.I16, RegisterType.ReadWrite, 12104, -400, 800, "Room Air Temperature sensor (accessory)"),
 r("SENSOR_EAT", DataType.I16, RegisterType.ReadWrite, 12105, -400, 800, "Extract Air Temperature sensor (accessory)"),
 r("SENSOR_ECT", DataType.I16, RegisterType.ReadWrite, 12106, -400, 800, "Extra Controller Temperature sensor (accessory)"),
 r("SENSOR_EFT", DataType.I16, RegisterType.ReadWrite, 12107, -400, 800, "Efficiency temperature sensor (accessory)"),
 r("SENSOR_OHT", DataType.I16, RegisterType.ReadWrite, 12108, -400, 800, "Over Heat Temperature sensor (Electrical Heater)"),
 r("SENSOR_RHS", DataType.U16, RegisterType.ReadWrite, 12109, 0, 100, "Relative Humidity Sensor (Accessory)"),
 r("SENSOR_RGS", DataType.U16, RegisterType.ReadOnly, 12112, 0, 1, "Rotating guard Sensor input"),
 r("SENSOR_RGS", DataType.U16, RegisterType.ReadOnly, 12112, 0, 1, "Rotating guard Sensor input"),
 r("SENSOR_CO2S", DataType.U16, RegisterType.ReadWrite, 12115, 0, 2000, "CO2 value (accessory)"),
 r("SENSOR_RHS_PDM", DataType.U16, RegisterType.ReadWrite, 12136, 0, 100, "PDM RHS sensor value (standard)"),
 r("SENSOR_CO2S_1", DataType.U16, RegisterType.ReadWrite, 12151, 0, 2000, "CO2 sensor value - UI1 (accessory)"),
 r("SENSOR_CO2S_2", DataType.U16, RegisterType.ReadWrite, 12152, 0, 2000, "CO2 sensor value - UI2 (accessory)"),
 r("SENSOR_CO2S_3", DataType.U16, RegisterType.ReadWrite, 12153, 0, 2000, "CO2 sensor value - UI3 (accessory)"),
 r("SENSOR_CO2S_4", DataType.U16, RegisterType.ReadWrite, 12154, 0, 2000, "CO2 sensor value - UI4 (accessory)"),
 r("SENSOR_CO2S_5", DataType.U16, RegisterType.ReadWrite, 12155, 0, 2000, "CO2 sensor value - UI5 (accessory)"),
 r("SENSOR_CO2S_6", DataType.U16, RegisterType.ReadOnly, 12156, undefined, undefined, "CO2 sensor value - UI6 (accessory)"),
 r("SENSOR_RHS_1", DataType.U16, RegisterType.ReadWrite, 12161, 0, 100, "RH sensor value - UI1 (accessory)"),
 r("SENSOR_RHS_2", DataType.U16, RegisterType.ReadWrite, 12162, 0, 100, "RH sensor value - UI2 (accessory)"),
 r("SENSOR_RHS_3", DataType.U16, RegisterType.ReadWrite, 12163, 0, 100, "RH sensor value - UI3 (accessory)"),
 r("SENSOR_RHS_4", DataType.U16, RegisterType.ReadWrite, 12164, 0, 100, "RH sensor value - UI4 (accessory)"),
 r("SENSOR_RHS_5", DataType.U16, RegisterType.ReadWrite, 12165, 0, 100, "RH sensor value - UI5 (accessory)"),
 r("SENSOR_RHS_6", DataType.U16, RegisterType.ReadOnly, 12166, 0, 100, "RH sensor value - UI6 (accessory)"),
 r("SENSOR_DI_AWAY", DataType.U16, RegisterType.ReadOnly, 12301, 0, 1, "Value of physical Digital Input of Away function"),
 r("SENSOR_DI_HOLIDAY", DataType.U16, RegisterType.ReadOnly, 12302, 0, 1, "Value of physical Digital Input of Holiday function"),
 r("SENSOR_DI_FIREPLACE", DataType.U16, RegisterType.ReadOnly, 12303, 0, 1, "Value of physical Digital Input of Fireplace function"),
 r("SENSOR_DI_REHRESH", DataType.U16, RegisterType.ReadOnly, 12304, 0, 1, "Value of physical Digital Input of Refresh function"),
 r("SENSOR_DI_CROWDED", DataType.U16, RegisterType.ReadOnly, 12305, 0, 1, "Value of physical Digital Input of Crowded function"),
 r("SENSOR_DI_COOKERHOOD", DataType.U16, RegisterType.ReadOnly, 12306, 0, 1, "Value of physical Digital Input of Cookerhood function"),
 r("SENSOR_DI_VACUUMCLEANER", DataType.U16, RegisterType.ReadOnly, 12307, 0, 1, "Value of physical Digital Input of Vacuum Cleaner function"),
 r("SENSOR_DI_EXTERNAL_STOP", DataType.U16, RegisterType.ReadOnly, 12308, 0, 1, "External Stop input value"),
 r("SENSOR_DI_LOAD_DETECTED", DataType.U16, RegisterType.ReadOnly, 12309, 0, 1, "Load Detected input value"),
 r("SENSOR_DI_EXTRA_CONTROLLER_EMT", DataType.U16, RegisterType.ReadOnly, 12310, 0, 1, "Extra controller EMT input value"),
 r("SENSOR_DI_FIRE_ALARM", DataType.U16, RegisterType.ReadOnly, 12311, 0, 1, "Fire Alarm input value"),
 r("SENSOR_DI_CHANGE_OVER_FEEDBACK", DataType.U16, RegisterType.ReadOnly, 12312, 0, 1, "Change over feedback value"),
 r("SENSOR_DI_PRESSURE_GUARD", DataType.U16, RegisterType.ReadOnly, 12316, 0, 1, "Indicates if physical DI is active"),
 r("SENSOR_DI_CDI_1", DataType.U16, RegisterType.ReadOnly, 12317, 0, 1, "Indicates if physical DI is active"),
 r("SENSOR_DI_CDI_2", DataType.U16, RegisterType.ReadOnly, 12318, 0, 1, "Indicates if physical DI is active"),
 r("SENSOR_DI_CDI_3", DataType.U16, RegisterType.ReadOnly, 12319, 0, 1, "Indicates if physical DI is active"),
 r("SENSOR_RPM_SAF", DataType.U16, RegisterType.ReadOnly, 12401, 0, 5000, "Supply Air Fan RPM indication from TACHO"),
 r("SENSOR_RPM_EAF", DataType.U16, RegisterType.ReadOnly, 12402, 0, 5000, "Extract Air Fan RPM indication from TACHO"),
 r("SENSOR_FLOW_PIGGYBACK_SAF", DataType.U16, RegisterType.ReadOnly, 12403, undefined, undefined, "Flow value calculated from piggyback pressure sensor."),
 r("SENSOR_FLOW_PIGGYBACK_EAF", DataType.U16, RegisterType.ReadOnly, 12404, undefined, undefined, "Flow value calculated from piggyback pressure sensor."),
 r("SENSOR_DI_BYF", DataType.U16, RegisterType.ReadOnly, 12405, undefined, undefined, "Value from Bypass Damper Feedback input.In %."),
 r("SENSOR_PDM_EAT_VALUE", DataType.U16, RegisterType.ReadWrite, 12544, -400, 800, "PDM EAT sensor value (standard)"),
 r("MANUAL_OVERRIDE_F_INPUT_UI_RH_MODE", DataType.U16, RegisterType.ReadWrite, 12931, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_UI_CO2_MODE", DataType.U16, RegisterType.ReadWrite, 12932, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_OAT_MODE", DataType.U16, RegisterType.ReadWrite, 12933, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_SAT_MODE", DataType.U16, RegisterType.ReadWrite, 12934, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_OHT_MODE", DataType.U16, RegisterType.ReadWrite, 12935, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_FPT_MODE", DataType.U16, RegisterType.ReadWrite, 12936, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_RAT_MODE", DataType.U16, RegisterType.ReadWrite, 12937, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_EAT_MODE", DataType.U16, RegisterType.ReadWrite, 12938, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_ECT_MODE", DataType.U16, RegisterType.ReadWrite, 12939, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_EFT_MODE", DataType.U16, RegisterType.ReadWrite, 12940, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_PDM_RH_MODE", DataType.U16, RegisterType.ReadWrite, 12941, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_F_INPUT_PDM_T_MODE", DataType.U16, RegisterType.ReadWrite, 12942, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_INPUT_SAF_RPM_MODE", DataType.U16, RegisterType.ReadWrite, 12943, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_INPUT_EAF_RPM_MODE", DataType.U16, RegisterType.ReadWrite, 12944, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_INPUT_UI6_MODE", DataType.U16, RegisterType.ReadWrite, 12945, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_INPUT_BYF_MODE", DataType.U16, RegisterType.ReadWrite, 12946, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_INPUT_PIGGYBACK1_SAF_P_MODE", DataType.U16, RegisterType.ReadWrite, 12947, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_INPUT_PIGGYBACK1_EAF_P_MODE", DataType.U16, RegisterType.ReadWrite, 12948, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_INPUT_PIGGYBACK2_SAF_P_MODE", DataType.U16, RegisterType.ReadWrite, 12949, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_INPUT_PIGGYBACK2_EAF_P_MODE", DataType.U16, RegisterType.ReadWrite, 12950, 0, 1, "Enable manual override of the device input.\n0: AUTO\n1: OVERRIDE"),
 r("MANUAL_OVERRIDE_INPUT_AI1_VALUE", DataType.I16, RegisterType.ReadWrite, 12951, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_AI2_VALUE", DataType.I16, RegisterType.ReadWrite, 12952, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_AI3_VALUE", DataType.I16, RegisterType.ReadWrite, 12953, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_AI4_VALUE", DataType.I16, RegisterType.ReadWrite, 12954, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_AI5_VALUE", DataType.I16, RegisterType.ReadWrite, 12955, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_AI6_VALUE", DataType.I16, RegisterType.ReadWrite, 12956, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_AI7_VALUE", DataType.I16, RegisterType.ReadWrite, 12957, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_DI1_VALUE", DataType.I16, RegisterType.ReadWrite, 12958, 0, 1, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_DI2_VALUE", DataType.I16, RegisterType.ReadWrite, 12959, 0, 1, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_UI1_VALUE", DataType.I16, RegisterType.ReadWrite, 12960, 0, 100, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_UI2_VALUE", DataType.I16, RegisterType.ReadWrite, 12961, 0, 100, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_UI3_VALUE", DataType.I16, RegisterType.ReadWrite, 12962, 0, 100, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_UI4_VALUE", DataType.I16, RegisterType.ReadWrite, 12963, 0, 100, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_INPUT_UI5_VALUE", DataType.I16, RegisterType.ReadWrite, 12964, 0, 100, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_F_INPUT_OAT_VALUE", DataType.I16, RegisterType.ReadWrite, 12983, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_F_INPUT_SAT_VALUE", DataType.I16, RegisterType.ReadWrite, 12984, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_F_INPUT_OHT_VALUE", DataType.I16, RegisterType.ReadWrite, 12985, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_F_INPUT_FPT_VALUE", DataType.I16, RegisterType.ReadWrite, 12986, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_F_INPUT_RAT_VALUE", DataType.I16, RegisterType.ReadWrite, 12987, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_F_INPUT_EAT_VALUE", DataType.I16, RegisterType.ReadWrite, 12988, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_F_INPUT_ECT_VALUE", DataType.I16, RegisterType.ReadWrite, 12989, -410, 810, "Value to override the device input with."),
 r("MANUAL_OVERRIDE_F_INPUT_EFT_VALUE", DataType.I16, RegisterType.ReadWrite, 12990, -410, 810, "Value to override the device input with."),
 r("OUTPUT_TRIAC_CONFIGURED", DataType.U16, RegisterType.ReadWrite, 13201, 0, 1, "Indicates if the TRIAC shall be used"),
 r("DO1_AFTER_MUX", DataType.U16, RegisterType.ReadOnly, 13301, 0, 1, "Digital output after multiplexer"),
 r("DO2_AFTER_MUX", DataType.U16, RegisterType.ReadOnly, 13302, 0, 1, "Digital output after multiplexer"),
 r("DO3_AFTER_MUX", DataType.U16, RegisterType.ReadOnly, 13303, 0, 1, "Digital output after multiplexer"),
 r("DO4_AFTER_MUX", DataType.U16, RegisterType.ReadOnly, 13304, 0, 1, "Digital output after multiplexer"),
 r("AO1_AFTER_MUX", DataType.U16, RegisterType.ReadOnly, 13311, 0, 100, "Analog output after multiplexer"),
 r("AO2_AFTER_MUX", DataType.U16, RegisterType.ReadOnly, 13312, 0, 100, "Analog output after multiplexer"),
 r("AO3_AFTER_MUX", DataType.U16, RegisterType.ReadOnly, 13313, 0, 100, "Analog output after multiplexer"),
 r("AO4_AFTER_MUX", DataType.U16, RegisterType.ReadOnly, 13314, 0, 100, "Analog output after multiplexer"),
 r("AO5_AFTER_MUX", DataType.U16, RegisterType.ReadOnly, 13315, 0, 100, "Analog output after multiplexer"),
 r("MANUAL_OVERRIDE_OUTPUT_SAF", DataType.U16, RegisterType.ReadWrite, 13601, 0, 1, "SAF Override.\n0: Auto 1: Manual"),
 r("MANUAL_OVERRIDE_OUTPUT_EAF", DataType.U16, RegisterType.ReadWrite, 13602, 0, 1, "EAF Override.\n0: Auto 1: Manual"),
 r("MANUAL_OVERRIDE_OUTPUT_SAF_VALUE", DataType.U16, RegisterType.ReadWrite, 13801, 0, 100, "SAF Override value in % if manual (1) selected"),
 r("MANUAL_OVERRIDE_OUTPUT_EAF_VALUE", DataType.U16, RegisterType.ReadWrite, 13802, 0, 100, "EAF override value in % if manual (1) selected"),
 r("OUTPUT_SAF", DataType.U16, RegisterType.ReadOnly, 14001, 0, 100, "SAF fan speed"),
 r("OUTPUT_EAF", DataType.U16, RegisterType.ReadOnly, 14002, 0, 100, "EAF fan speed"),
 r("OUTPUT_ALARM", DataType.U16, RegisterType.ReadOnly, 14003, 0, 1, "Sum Alarm DO\n0: Output not active\n1: Output active"),
 r("OUTPUT_OUTDOOR_EXTRACT_DAMPER", DataType.U16, RegisterType.ReadOnly, 14004, 0, 1, "Indicates if Outdoor/Exhaust air dampersignal is On/Off"),
 r("OUTPUT_Y1_ANALOG", DataType.U16, RegisterType.ReadOnly, 14101, 0, 100, "Heater AO state."),
 r("OUTPUT_Y1_DIGITAL", DataType.U16, RegisterType.ReadOnly, 14102, 0, 1, "Heater DO state:\n0: Output not active\n1: Output active"),
 r("OUTPUT_Y2_ANALOG", DataType.U16, RegisterType.ReadOnly, 14103, 0, 100, "Heat Exchanger AO state."),
 r("OUTPUT_Y2_DIGITAL", DataType.U16, RegisterType.ReadOnly, 14104, 0, 1, "Heat Exchanger DO state.\n0: Output notactive\n1: Output active"),
 r("OUTPUT_Y3_ANALOG", DataType.U16, RegisterType.ReadOnly, 14201, 0, 100, "Cooler AO state."),
 r("OUTPUT_Y3_DIGITAL", DataType.U16, RegisterType.ReadOnly, 14202, 0, 1, "Cooler DO state:\n0: Output not active\n1: Output active"),
 r("OUTPUT_Y4_ANALOG", DataType.U16, RegisterType.ReadOnly, 14203, 0, 100, "Extra controller AO state."),
 r("OUTPUT_Y4_DIGITAL", DataType.U16, RegisterType.ReadOnly, 14204, 0, 1, "Extra controller DO state:\n0: Output not active\n1: Output active"),
 r("OUTPUT_Y1_CIRC_PUMP", DataType.U16, RegisterType.ReadOnly, 14301, undefined, undefined, "Heating circulation pump output"),
 r("OUTPUT_Y3_CIRC_PUMP", DataType.U16, RegisterType.ReadOnly, 14302, undefined, undefined, "Cooler circulation pump output"),
 r("OUTPUT_Y1_Y3_CIRC_PUMP", DataType.U16, RegisterType.ReadOnly, 14303, undefined, undefined, "Change-over circulation pump output"),
 r("OUTPUT_Y4_CIRC_PUMP", DataType.U16, RegisterType.ReadOnly, 14304, undefined, undefined, "Extra controller circulation pump output"),
 r("OUTPUT_AO1", DataType.U16, RegisterType.ReadOnly, 14351, undefined, undefined, "Voltage signal from AO1"),
 r("OUTPUT_AO2", DataType.U16, RegisterType.ReadOnly, 14352, undefined, undefined, "Voltage signal from AO2"),
 r("OUTPUT_AO3", DataType.U16, RegisterType.ReadOnly, 14353, undefined, undefined, "Voltage signal from AO3"),
 r("OUTPUT_AO4", DataType.U16, RegisterType.ReadOnly, 14354, undefined, undefined, "Voltage signal from AO4"),
 r("OUTPUT_AO5", DataType.U16, RegisterType.ReadOnly, 14355, undefined, undefined, "Voltage signal from AO5"),
 r("OUTPUT_DO1", DataType.U16, RegisterType.ReadOnly, 14361, 0, 1, "State of DO1"),
 r("OUTPUT_DO2", DataType.U16, RegisterType.ReadOnly, 14362, 0, 1, "State of DO2"),
 r("OUTPUT_DO3", DataType.U16, RegisterType.ReadOnly, 14363, 0, 1, "State of DO3"),
 r("OUTPUT_DO4", DataType.U16, RegisterType.ReadOnly, 14364, 0, 1, "State of DO4"),
 r("OUTPUT_FAN_SPEED1", DataType.U16, RegisterType.ReadOnly, 14371, 0, 100, "Supply air fan control signal in %"),
 r("OUTPUT_FAN_SPEED2", DataType.U16, RegisterType.ReadOnly, 14372, 0, 100, "Extract air fan control signal in %"),
 r("OUTPUT_TRIAC", DataType.U16, RegisterType.ReadOnly, 14381, 0, 1, "TRIAC control signal"),
 r("ALARM_SAF_CTRL_ALARM", DataType.U16, RegisterType.ReadOnly, 15002, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_SAF_CTRL_ALARM", DataType.U16, RegisterType.ReadOnly, 15002, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_SAF_CTRL_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15003, 0, 1, "Signal to clear the alarm"),
 r("ALARM_SAF_CTRL_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15003, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EAF_CTRL_ALARM", DataType.U16, RegisterType.ReadOnly, 15009, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EAF_CTRL_ALARM", DataType.U16, RegisterType.ReadOnly, 15009, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EAF_CTRL_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15010, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EAF_CTRL_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15010, 0, 1, "Signal to clear the alarm"),
 r("ALARM_FROST_PROT_ALARM", DataType.U16, RegisterType.ReadOnly, 15016, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_FROST_PROT_ALARM", DataType.U16, RegisterType.ReadOnly, 15016, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_FROST_PROT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15017, 0, 1, "Signal to clear the alarm"),
 r("ALARM_FROST_PROT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15017, 0, 1, "Signal to clear the alarm"),
 r("ALARM_DEFROSTING_ALARM", DataType.U16, RegisterType.ReadOnly, 15023, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_DEFROSTING_ALARM", DataType.U16, RegisterType.ReadOnly, 15023, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_DEFROSTING_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15024, 0, 1, "Signal to clear the alarm"),
 r("ALARM_DEFROSTING_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15024, 0, 1, "Signal to clear the alarm"),
 r("ALARM_SAF_RPM_ALARM", DataType.U16, RegisterType.ReadOnly, 15030, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_SAF_RPM_ALARM", DataType.U16, RegisterType.ReadOnly, 15030, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_SAF_RPM_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15031, 0, 1, "Signal to clear the alarm"),
 r("ALARM_SAF_RPM_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15031, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EAF_RPM_ALARM", DataType.U16, RegisterType.ReadOnly, 15037, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EAF_RPM_ALARM", DataType.U16, RegisterType.ReadOnly, 15037, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EAF_RPM_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15038, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EAF_RPM_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15038, 0, 1, "Signal to clear the alarm"),
 r("ALARM_FPT_ALARM", DataType.U16, RegisterType.ReadOnly, 15058, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_FPT_ALARM", DataType.U16, RegisterType.ReadOnly, 15058, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_FPT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15059, 0, 1, "Signal to clear the alarm"),
 r("ALARM_FPT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15059, 0, 1, "Signal to clear the alarm"),
 r("ALARM_OAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15065, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_OAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15065, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_OAT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15066, 0, 1, "Signal to clear the alarm"),
 r("ALARM_OAT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15066, 0, 1, "Signal to clear the alarm"),
 r("ALARM_SAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15072, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_SAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15072, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_SAT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15073, 0, 1, "Signal to clear the alarm"),
 r("ALARM_SAT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15073, 0, 1, "Signal to clear the alarm"),
 r("ALARM_RAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15079, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_RAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15079, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_RAT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15080, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15086, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EAT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15087, 0, 1, "Signal to clear the alarm"),
 r("ALARM_ECT_ALARM", DataType.U16, RegisterType.ReadOnly, 15093, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_ECT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15094, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EFT_ALARM", DataType.U16, RegisterType.ReadOnly, 15100, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EFT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15101, 0, 1, "Signal to clear the alarm"),
 r("ALARM_OHT_ALARM", DataType.U16, RegisterType.ReadOnly, 15107, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_OHT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15108, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EMT_ALARM", DataType.U16, RegisterType.ReadOnly, 15114, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EMT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15115, 0, 1, "Signal to clear the alarm"),
 r("ALARM_RGS_ALARM", DataType.U16, RegisterType.ReadOnly, 15121, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_RGS_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15122, 0, 1, "Signal to clear the alarm"),
 r("ALARM_BYS_ALARM", DataType.U16, RegisterType.ReadOnly, 15128, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_BYS_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15129, 0, 1, "Signal to clear the alarm"),
 r("ALARM_SECONDARY_AIR_ALARM", DataType.U16, RegisterType.ReadOnly, 15135, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_SECONDARY_AIR_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15136, 0, 1, "Signal to clear the alarm"),
 r("ALARM_FILTER_ALARM", DataType.U16, RegisterType.ReadOnly, 15142, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_FILTER_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15143, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EXTRA_CONTROLLER_ALARM", DataType.U16, RegisterType.ReadOnly, 15149, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EXTRA_CONTROLLER_ALARM", DataType.U16, RegisterType.ReadOnly, 15149, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EXTRA_CONTROLLER_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15150, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EXTRA_CONTROLLER_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15150, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EXTERNAL_STOP_ALARM", DataType.U16, RegisterType.ReadOnly, 15156, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EXTERNAL_STOP_ALARM", DataType.U16, RegisterType.ReadOnly, 15156, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_EXTERNAL_STOP_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15157, 0, 1, "Signal to clear the alarm"),
 r("ALARM_EXTERNAL_STOP_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15157, 0, 1, "Signal to clear the alarm"),
 r("ALARM_RH_ALARM", DataType.U16, RegisterType.ReadOnly, 15163, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_RH_ALARM", DataType.U16, RegisterType.ReadOnly, 15163, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_RH_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15164, 0, 1, "Signal to clear the alarm"),
 r("ALARM_RH_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15164, 0, 1, "Signal to clear the alarm"),
 r("ALARM_CO2_ALARM", DataType.U16, RegisterType.ReadOnly, 15170, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_CO2_ALARM", DataType.U16, RegisterType.ReadOnly, 15170, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_CO2_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15171, 0, 1, "Signal to clear the alarm"),
 r("ALARM_CO2_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15171, 0, 1, "Signal to clear the alarm"),
 r("ALARM_LOW_SAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15177, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_LOW_SAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15177, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_LOW_SAT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15178, 0, 1, "Signal to clear the alarm"),
 r("ALARM_LOW_SAT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15178, 0, 1, "Signal to clear the alarm"),
 r("ALARM_BYF_ALARM", DataType.U16, RegisterType.ReadOnly, 15184, undefined, undefined, "Alarm active/inactive\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_BYF_ALARM", DataType.U16, RegisterType.ReadOnly, 15184, undefined, undefined, "Alarm active/inactive\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_BYF_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15185, undefined, 0, "Signal to clear the alarm"),
 r("ALARM_BYF_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15185, undefined, 0, "Signal to clear the alarm"),
 r("ALARM_MANUAL_OVERRIDE_OUTPUTS_ALARM", DataType.U16, RegisterType.ReadOnly, 15502, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_MANUAL_OVERRIDE_OUTPUTS_ALARM", DataType.U16, RegisterType.ReadOnly, 15502, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_MANUAL_OVERRIDE_OUTPUTS_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15503, 0, 1, "Signal to clear the alarm"),
 r("ALARM_MANUAL_OVERRIDE_OUTPUTS_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15503, 0, 1, "Signal to clear the alarm"),
 r("ALARM_PDM_RHS_ALARM", DataType.U16, RegisterType.ReadOnly, 15509, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_PDM_RHS_ALARM", DataType.U16, RegisterType.ReadOnly, 15509, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_PDM_RHS_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15510, 0, 1, "Signal to clear the alarm"),
 r("ALARM_PDM_RHS_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15510, 0, 1, "Signal to clear the alarm"),
 r("ALARM_PDM_EAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15516, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_PDM_EAT_ALARM", DataType.U16, RegisterType.ReadOnly, 15516, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_PDM_EAT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15517, 0, 1, "Signal to clear the alarm"),
 r("ALARM_PDM_EAT_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15517, 0, 1, "Signal to clear the alarm"),
 r("ALARM_MANUAL_FAN_STOP_ALARM", DataType.U16, RegisterType.ReadOnly, 15523, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_MANUAL_FAN_STOP_ALARM", DataType.U16, RegisterType.ReadOnly, 15523, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_MANUAL_FAN_STOP_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15524, 0, 1, "Signal to clear the alarm"),
 r("ALARM_OVERHEAT_TEMPERATURE_ALARM", DataType.U16, RegisterType.ReadOnly, 15530, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_OVERHEAT_TEMPERATURE_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15531, 0, 1, "Signal to clear the alarm"),
 r("ALARM_FIRE_ALARM_ALARM", DataType.U16, RegisterType.ReadOnly, 15537, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_FIRE_ALARM_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15538, 0, 1, "Signal to clear the alarm"),
 r("ALARM_FILTER_WARNING_ALARM", DataType.U16, RegisterType.ReadOnly, 15544, 0, 3, "Alarm active/inactive.\n0: Inactive\n1: Active\n2: Waiting\n3: Cleared Error Active"),
 r("ALARM_FILTER_WARNING_CLEAR_ALARM", DataType.U16, RegisterType.ReadWrite, 15545, 0, 1, "Signal to clear the alarm"),
 r("ALARM_FILTER_WARNING_ALARM_ERROR_DURATION_COUNTER", DataType.U16, RegisterType.ReadOnly, 15549, undefined, undefined, "Counter for delay"),
 r("ALARM_LOG_1_ID", DataType.U16, RegisterType.ReadOnly, 15701, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_1_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15702, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_1_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15703, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_1_YEAR", DataType.U16, RegisterType.ReadOnly, 15704, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_1_MONTH", DataType.U16, RegisterType.ReadOnly, 15705, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_1_DAY", DataType.U16, RegisterType.ReadOnly, 15706, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_1_HOUR", DataType.U16, RegisterType.ReadOnly, 15707, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_1_MINUTE", DataType.U16, RegisterType.ReadOnly, 15708, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_1_SECOND", DataType.U16, RegisterType.ReadOnly, 15709, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_1_CODE", DataType.U16, RegisterType.ReadOnly, 15710, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_2_ID", DataType.U16, RegisterType.ReadOnly, 15711, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_2_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15712, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_2_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15713, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_2_YEAR", DataType.U16, RegisterType.ReadOnly, 15714, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_2_MONTH", DataType.U16, RegisterType.ReadOnly, 15715, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_2_DAY", DataType.U16, RegisterType.ReadOnly, 15716, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_2_HOUR", DataType.U16, RegisterType.ReadOnly, 15717, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_2_MINUTE", DataType.U16, RegisterType.ReadOnly, 15718, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_2_SECOND", DataType.U16, RegisterType.ReadOnly, 15719, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_2_CODE", DataType.U16, RegisterType.ReadOnly, 15720, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_3_ID", DataType.U16, RegisterType.ReadOnly, 15721, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_3_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15722, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_3_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15723, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_3_YEAR", DataType.U16, RegisterType.ReadOnly, 15724, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_3_MONTH", DataType.U16, RegisterType.ReadOnly, 15725, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_3_DAY", DataType.U16, RegisterType.ReadOnly, 15726, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_3_HOUR", DataType.U16, RegisterType.ReadOnly, 15727, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_3_MINUTE", DataType.U16, RegisterType.ReadOnly, 15728, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_3_SECOND", DataType.U16, RegisterType.ReadOnly, 15729, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_3_CODE", DataType.U16, RegisterType.ReadOnly, 15730, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_4_ID", DataType.U16, RegisterType.ReadOnly, 15731, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_4_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15732, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_4_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15733, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_4_YEAR", DataType.U16, RegisterType.ReadOnly, 15734, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_4_MONTH", DataType.U16, RegisterType.ReadOnly, 15735, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_4_DAY", DataType.U16, RegisterType.ReadOnly, 15736, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_4_HOUR", DataType.U16, RegisterType.ReadOnly, 15737, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_4_MINUTE", DataType.U16, RegisterType.ReadOnly, 15738, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_4_SECOND", DataType.U16, RegisterType.ReadOnly, 15739, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_4_CODE", DataType.U16, RegisterType.ReadOnly, 15740, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_5_ID", DataType.U16, RegisterType.ReadOnly, 15741, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_5_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15742, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_5_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15743, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_5_YEAR", DataType.U16, RegisterType.ReadOnly, 15744, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_5_MONTH", DataType.U16, RegisterType.ReadOnly, 15745, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_5_DAY", DataType.U16, RegisterType.ReadOnly, 15746, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_5_HOUR", DataType.U16, RegisterType.ReadOnly, 15747, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_5_MINUTE", DataType.U16, RegisterType.ReadOnly, 15748, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_5_SECOND", DataType.U16, RegisterType.ReadOnly, 15749, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_5_CODE", DataType.U16, RegisterType.ReadOnly, 15750, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_6_ID", DataType.U16, RegisterType.ReadOnly, 15751, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_6_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15752, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_6_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15753, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_6_YEAR", DataType.U16, RegisterType.ReadOnly, 15754, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_6_MONTH", DataType.U16, RegisterType.ReadOnly, 15755, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_6_DAY", DataType.U16, RegisterType.ReadOnly, 15756, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_6_HOUR", DataType.U16, RegisterType.ReadOnly, 15757, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_6_MINUTE", DataType.U16, RegisterType.ReadOnly, 15758, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_6_SECOND", DataType.U16, RegisterType.ReadOnly, 15759, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_6_CODE", DataType.U16, RegisterType.ReadOnly, 15760, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_7_ID", DataType.U16, RegisterType.ReadOnly, 15761, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_7_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15762, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_7_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15763, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_7_YEAR", DataType.U16, RegisterType.ReadOnly, 15764, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_7_MONTH", DataType.U16, RegisterType.ReadOnly, 15765, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_7_DAY", DataType.U16, RegisterType.ReadOnly, 15766, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_7_HOUR", DataType.U16, RegisterType.ReadOnly, 15767, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_7_MINUTE", DataType.U16, RegisterType.ReadOnly, 15768, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_7_SECOND", DataType.U16, RegisterType.ReadOnly, 15769, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_7_CODE", DataType.U16, RegisterType.ReadOnly, 15770, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_8_ID", DataType.U16, RegisterType.ReadOnly, 15771, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_8_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15772, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_8_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15773, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_8_YEAR", DataType.U16, RegisterType.ReadOnly, 15774, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_8_MONTH", DataType.U16, RegisterType.ReadOnly, 15775, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_8_DAY", DataType.U16, RegisterType.ReadOnly, 15776, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_8_HOUR", DataType.U16, RegisterType.ReadOnly, 15777, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_8_MINUTE", DataType.U16, RegisterType.ReadOnly, 15778, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_8_SECOND", DataType.U16, RegisterType.ReadOnly, 15779, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_8_CODE", DataType.U16, RegisterType.ReadOnly, 15780, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_9_ID", DataType.U16, RegisterType.ReadOnly, 15781, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_9_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15782, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_9_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15783, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_9_YEAR", DataType.U16, RegisterType.ReadOnly, 15784, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_9_MONTH", DataType.U16, RegisterType.ReadOnly, 15785, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_9_DAY", DataType.U16, RegisterType.ReadOnly, 15786, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_9_HOUR", DataType.U16, RegisterType.ReadOnly, 15787, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_9_MINUTE", DataType.U16, RegisterType.ReadOnly, 15788, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_9_SECOND", DataType.U16, RegisterType.ReadOnly, 15789, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_9_CODE", DataType.U16, RegisterType.ReadOnly, 15790, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_10_ID", DataType.U16, RegisterType.ReadOnly, 15791, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_10_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15792, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_10_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15793, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_10_YEAR", DataType.U16, RegisterType.ReadOnly, 15794, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_10_MONTH", DataType.U16, RegisterType.ReadOnly, 15795, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_10_DAY", DataType.U16, RegisterType.ReadOnly, 15796, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_10_HOUR", DataType.U16, RegisterType.ReadOnly, 15797, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_10_MINUTE", DataType.U16, RegisterType.ReadOnly, 15798, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_10_SECOND", DataType.U16, RegisterType.ReadOnly, 15799, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_10_CODE", DataType.U16, RegisterType.ReadOnly, 15800, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_11_ID", DataType.U16, RegisterType.ReadOnly, 15801, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_11_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15802, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_11_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15803, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_11_YEAR", DataType.U16, RegisterType.ReadOnly, 15804, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_11_MONTH", DataType.U16, RegisterType.ReadOnly, 15805, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_11_DAY", DataType.U16, RegisterType.ReadOnly, 15806, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_11_HOUR", DataType.U16, RegisterType.ReadOnly, 15807, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_11_MINUTE", DataType.U16, RegisterType.ReadOnly, 15808, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_11_SECOND", DataType.U16, RegisterType.ReadOnly, 15809, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_11_CODE", DataType.U16, RegisterType.ReadOnly, 15810, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_12_ID", DataType.U16, RegisterType.ReadOnly, 15811, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_12_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15812, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_12_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15813, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_12_YEAR", DataType.U16, RegisterType.ReadOnly, 15814, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_12_MONTH", DataType.U16, RegisterType.ReadOnly, 15815, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_12_DAY", DataType.U16, RegisterType.ReadOnly, 15816, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_12_HOUR", DataType.U16, RegisterType.ReadOnly, 15817, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_12_MINUTE", DataType.U16, RegisterType.ReadOnly, 15818, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_12_SECOND", DataType.U16, RegisterType.ReadOnly, 15819, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_12_CODE", DataType.U16, RegisterType.ReadOnly, 15820, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_13_ID", DataType.U16, RegisterType.ReadOnly, 15821, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_13_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15822, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_13_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15823, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_13_YEAR", DataType.U16, RegisterType.ReadOnly, 15824, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_13_MONTH", DataType.U16, RegisterType.ReadOnly, 15825, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_13_DAY", DataType.U16, RegisterType.ReadOnly, 15826, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_13_HOUR", DataType.U16, RegisterType.ReadOnly, 15827, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_13_MINUTE", DataType.U16, RegisterType.ReadOnly, 15828, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_13_SECOND", DataType.U16, RegisterType.ReadOnly, 15829, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_13_CODE", DataType.U16, RegisterType.ReadOnly, 15830, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_14_ID", DataType.U16, RegisterType.ReadOnly, 15831, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_14_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15832, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_14_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15833, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_14_YEAR", DataType.U16, RegisterType.ReadOnly, 15834, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_14_MONTH", DataType.U16, RegisterType.ReadOnly, 15835, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_14_DAY", DataType.U16, RegisterType.ReadOnly, 15836, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_14_HOUR", DataType.U16, RegisterType.ReadOnly, 15837, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_14_MINUTE", DataType.U16, RegisterType.ReadOnly, 15838, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_14_SECOND", DataType.U16, RegisterType.ReadOnly, 15839, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_14_CODE", DataType.U16, RegisterType.ReadOnly, 15840, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_15_ID", DataType.U16, RegisterType.ReadOnly, 15841, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_15_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15842, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_15_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15843, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_15_YEAR", DataType.U16, RegisterType.ReadOnly, 15844, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_15_MONTH", DataType.U16, RegisterType.ReadOnly, 15845, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_15_DAY", DataType.U16, RegisterType.ReadOnly, 15846, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_15_HOUR", DataType.U16, RegisterType.ReadOnly, 15847, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_15_MINUTE", DataType.U16, RegisterType.ReadOnly, 15848, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_15_SECOND", DataType.U16, RegisterType.ReadOnly, 15849, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_15_CODE", DataType.U16, RegisterType.ReadOnly, 15850, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_16_ID", DataType.U16, RegisterType.ReadOnly, 15851, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_16_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15852, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_16_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15853, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_16_YEAR", DataType.U16, RegisterType.ReadOnly, 15854, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_16_MONTH", DataType.U16, RegisterType.ReadOnly, 15855, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_16_DAY", DataType.U16, RegisterType.ReadOnly, 15856, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_16_HOUR", DataType.U16, RegisterType.ReadOnly, 15857, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_16_MINUTE", DataType.U16, RegisterType.ReadOnly, 15858, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_16_SECOND", DataType.U16, RegisterType.ReadOnly, 15859, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_16_CODE", DataType.U16, RegisterType.ReadOnly, 15860, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_17_ID", DataType.U16, RegisterType.ReadOnly, 15861, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_17_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15862, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_17_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15863, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_17_YEAR", DataType.U16, RegisterType.ReadOnly, 15864, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_17_MONTH", DataType.U16, RegisterType.ReadOnly, 15865, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_17_DAY", DataType.U16, RegisterType.ReadOnly, 15866, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_17_HOUR", DataType.U16, RegisterType.ReadOnly, 15867, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_17_MINUTE", DataType.U16, RegisterType.ReadOnly, 15868, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_17_SECOND", DataType.U16, RegisterType.ReadOnly, 15869, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_17_CODE", DataType.U16, RegisterType.ReadOnly, 15870, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_18_ID", DataType.U16, RegisterType.ReadOnly, 15871, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_18_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15872, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_18_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15873, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_18_YEAR", DataType.U16, RegisterType.ReadOnly, 15874, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_18_MONTH", DataType.U16, RegisterType.ReadOnly, 15875, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_18_DAY", DataType.U16, RegisterType.ReadOnly, 15876, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_18_HOUR", DataType.U16, RegisterType.ReadOnly, 15877, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_18_MINUTE", DataType.U16, RegisterType.ReadOnly, 15878, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_18_SECOND", DataType.U16, RegisterType.ReadOnly, 15879, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_18_CODE", DataType.U16, RegisterType.ReadOnly, 15880, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_19_ID", DataType.U16, RegisterType.ReadOnly, 15881, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_19_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15882, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_19_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15883, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_19_YEAR", DataType.U16, RegisterType.ReadOnly, 15884, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_19_MONTH", DataType.U16, RegisterType.ReadOnly, 15885, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_19_DAY", DataType.U16, RegisterType.ReadOnly, 15886, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_19_HOUR", DataType.U16, RegisterType.ReadOnly, 15887, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_19_MINUTE", DataType.U16, RegisterType.ReadOnly, 15888, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_19_SECOND", DataType.U16, RegisterType.ReadOnly, 15889, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_19_CODE", DataType.U16, RegisterType.ReadOnly, 15890, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_20_ID", DataType.U16, RegisterType.ReadOnly, 15891, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_20_STATE_NOW", DataType.U16, RegisterType.ReadOnly, 15892, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_20_STATE_PREVIOUS", DataType.U16, RegisterType.ReadOnly, 15893, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_20_YEAR", DataType.U16, RegisterType.ReadOnly, 15894, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_20_MONTH", DataType.U16, RegisterType.ReadOnly, 15895, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_20_DAY", DataType.U16, RegisterType.ReadOnly, 15896, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_20_HOUR", DataType.U16, RegisterType.ReadOnly, 15897, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_20_MINUTE", DataType.U16, RegisterType.ReadOnly, 15898, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_20_SECOND", DataType.U16, RegisterType.ReadOnly, 15899, undefined, undefined, "Alarm log information"),
 r("ALARM_LOG_20_CODE", DataType.U16, RegisterType.ReadOnly, 15900, undefined, undefined, "Alarm log information"),
 r("ALARM_TYPE_A", DataType.U16, RegisterType.ReadOnly, 15901, 0, 1, "Indicates if an alarm Type A is active"),
 r("ALARM_TYPE_B", DataType.U16, RegisterType.ReadOnly, 15902, 0, 1, "Indicates if an alarm Type B is active"),
 r("ALARM_TYPE_C", DataType.U16, RegisterType.ReadOnly, 15903, 0, 1, "Indicates if an alarm Type C is active"),
 r("PASSWD_ADMIN", DataType.U16, RegisterType.ReadWrite, 16001, undefined, undefined, "Administrator password.Bit 12-15: digit 1\nBit 8-11: digit 2\nBit 4-7: digit 3\nBit 0-3: digit 4"),
 r("LOCKED_USER", DataType.U16, RegisterType.ReadWrite, 16002, 0, 1, "Indicates if the User level is locked.\n0: User menu locked\n1: User menu not locked"),
 r("LOCKED_FILTER", DataType.U16, RegisterType.ReadWrite, 16003, 0, 1, "Indicates if the Filter menu is locked.\n0: menu locked\n1: menu not locked"),
 r("LOCKED_WEEK_SCHEDULE", DataType.U16, RegisterType.ReadWrite, 16004, 0, 1, "Indicates if the Week schedule menu islocked.\n0: menu locked\n1: menu not locked"),
 r("PASSWD_USER_LEVEL_REQUIRED", DataType.U16, RegisterType.ReadWrite, 16051, 0, 1, "Home screen lock"),
 r("PASSWD_FILTER_REQUIRED", DataType.U16, RegisterType.ReadWrite, 16052, 0, 1, "Filter Change menu lock"),
 r("PASSWD_WEEK_SCHEDULE_REQUIRED", DataType.U16, RegisterType.ReadWrite, 16053, 0, 1, "Week schedule menu lock"),
 r("PASSWD_PC_SETTINGS", DataType.U16, RegisterType.ReadWrite, 16061, undefined, undefined, ""),
 r("PASSWD_PC_UNLOCKED", DataType.U16, RegisterType.ReadOnly, 16062, 0, 1, ""),
 r("SUW_REQUIRED", DataType.U16, RegisterType.ReadWrite, 16101, 0, 1, "Indicates if the start-up wizard shall beactivated."),
 r("COMM_MODBUS_ADDRESS", DataType.U16, RegisterType.ReadWrite, 17001, 0, 255, "Modbus address of the MB.Only relevant if the MB is a modbus slave."),
 r("COMM_MODBUS_BAUD_RATE", DataType.U16, RegisterType.ReadWrite, 17002, 0, 10, "Baudrate of the modbus connection\n0=1200\n1=2400\n2=4800\n3=9600\n4=14400\n5=19200\n6=28800\n7=38400\n8=57600\n9=76800\n10=115200"),
 r("COMM_MODBUS_PARITY", DataType.U16, RegisterType.ReadWrite, 17003, 0, 2, "Parity setting for the modbus connection.\n0: None\n1: Even\n2: Odd"),
 r("FACTORY_RESET", DataType.U16, RegisterType.ReadWrite, 30101, 3228, 3228, "Activates setting of the parameters to their default values. Only activated by writing 3228 to this register."),
 r("SET_USER_SAFE_CONFIG", DataType.U16, RegisterType.ReadWrite, 30103, 0, 1, ""),
 r("ACTIVATE_USER_SAFE_CONFIG", DataType.U16, RegisterType.ReadWrite, 30104, 0, 1, ""),
 r("USER_SAFE_CONFIG_VALID", DataType.U16, RegisterType.ReadOnly, 30105, undefined, undefined, ""),
 r("SAFE_CONFIG_VALID", DataType.U16, RegisterType.ReadOnly, 30106, undefined, undefined, ""),
]);

export { registers };
